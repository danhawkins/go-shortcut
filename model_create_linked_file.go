/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateLinkedFile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateLinkedFile{}

// CreateLinkedFile struct for CreateLinkedFile
type CreateLinkedFile struct {
	// The description of the file.
	Description *string `json:"description,omitempty"`
	// The ID of the linked story.
	StoryId *int64 `json:"story_id,omitempty"`
	// The name of the file.
	Name string `json:"name"`
	// The URL of the thumbnail, if the integration provided it.
	ThumbnailUrl *string `json:"thumbnail_url,omitempty"`
	// The integration type of the file (e.g. google, dropbox, box).
	Type string `json:"type"`
	// The filesize, if the integration provided it.
	Size *int64 `json:"size,omitempty"`
	// The UUID of the member that uploaded the file.
	UploaderId *string `json:"uploader_id,omitempty"`
	// The content type of the image (e.g. txt/plain).
	ContentType *string `json:"content_type,omitempty"`
	// The URL of linked file.
	Url string `json:"url"`
}

// NewCreateLinkedFile instantiates a new CreateLinkedFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLinkedFile(name string, type_ string, url string) *CreateLinkedFile {
	this := CreateLinkedFile{}
	this.Name = name
	this.Type = type_
	this.Url = url
	return &this
}

// NewCreateLinkedFileWithDefaults instantiates a new CreateLinkedFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLinkedFileWithDefaults() *CreateLinkedFile {
	this := CreateLinkedFile{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateLinkedFile) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLinkedFile) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateLinkedFile) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateLinkedFile) SetDescription(v string) {
	o.Description = &v
}

// GetStoryId returns the StoryId field value if set, zero value otherwise.
func (o *CreateLinkedFile) GetStoryId() int64 {
	if o == nil || IsNil(o.StoryId) {
		var ret int64
		return ret
	}
	return *o.StoryId
}

// GetStoryIdOk returns a tuple with the StoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLinkedFile) GetStoryIdOk() (*int64, bool) {
	if o == nil || IsNil(o.StoryId) {
		return nil, false
	}
	return o.StoryId, true
}

// HasStoryId returns a boolean if a field has been set.
func (o *CreateLinkedFile) HasStoryId() bool {
	if o != nil && !IsNil(o.StoryId) {
		return true
	}

	return false
}

// SetStoryId gets a reference to the given int64 and assigns it to the StoryId field.
func (o *CreateLinkedFile) SetStoryId(v int64) {
	o.StoryId = &v
}

// GetName returns the Name field value
func (o *CreateLinkedFile) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateLinkedFile) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateLinkedFile) SetName(v string) {
	o.Name = v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *CreateLinkedFile) GetThumbnailUrl() string {
	if o == nil || IsNil(o.ThumbnailUrl) {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLinkedFile) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailUrl) {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *CreateLinkedFile) HasThumbnailUrl() bool {
	if o != nil && !IsNil(o.ThumbnailUrl) {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *CreateLinkedFile) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetType returns the Type field value
func (o *CreateLinkedFile) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateLinkedFile) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateLinkedFile) SetType(v string) {
	o.Type = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateLinkedFile) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLinkedFile) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateLinkedFile) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *CreateLinkedFile) SetSize(v int64) {
	o.Size = &v
}

// GetUploaderId returns the UploaderId field value if set, zero value otherwise.
func (o *CreateLinkedFile) GetUploaderId() string {
	if o == nil || IsNil(o.UploaderId) {
		var ret string
		return ret
	}
	return *o.UploaderId
}

// GetUploaderIdOk returns a tuple with the UploaderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLinkedFile) GetUploaderIdOk() (*string, bool) {
	if o == nil || IsNil(o.UploaderId) {
		return nil, false
	}
	return o.UploaderId, true
}

// HasUploaderId returns a boolean if a field has been set.
func (o *CreateLinkedFile) HasUploaderId() bool {
	if o != nil && !IsNil(o.UploaderId) {
		return true
	}

	return false
}

// SetUploaderId gets a reference to the given string and assigns it to the UploaderId field.
func (o *CreateLinkedFile) SetUploaderId(v string) {
	o.UploaderId = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *CreateLinkedFile) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLinkedFile) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *CreateLinkedFile) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *CreateLinkedFile) SetContentType(v string) {
	o.ContentType = &v
}

// GetUrl returns the Url field value
func (o *CreateLinkedFile) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CreateLinkedFile) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CreateLinkedFile) SetUrl(v string) {
	o.Url = v
}

func (o CreateLinkedFile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateLinkedFile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.StoryId) {
		toSerialize["story_id"] = o.StoryId
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.ThumbnailUrl) {
		toSerialize["thumbnail_url"] = o.ThumbnailUrl
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.UploaderId) {
		toSerialize["uploader_id"] = o.UploaderId
	}
	if !IsNil(o.ContentType) {
		toSerialize["content_type"] = o.ContentType
	}
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

type NullableCreateLinkedFile struct {
	value *CreateLinkedFile
	isSet bool
}

func (v NullableCreateLinkedFile) Get() *CreateLinkedFile {
	return v.value
}

func (v *NullableCreateLinkedFile) Set(val *CreateLinkedFile) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLinkedFile) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLinkedFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLinkedFile(val *CreateLinkedFile) *NullableCreateLinkedFile {
	return &NullableCreateLinkedFile{value: val, isSet: true}
}

func (v NullableCreateLinkedFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLinkedFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


