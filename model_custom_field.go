/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CustomField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomField{}

// CustomField struct for CustomField
type CustomField struct {
	// A string description of the CustomField
	Description *string `json:"description,omitempty"`
	// A string that represents the icon that corresponds to this custom field.
	IconSetIdentifier *string `json:"icon_set_identifier,omitempty"`
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// The types of stories this CustomField is scoped to.
	StoryTypes []string `json:"story_types,omitempty"`
	// The name of the Custom Field.
	Name string `json:"name"`
	// When true, the CustomFieldEnumValues may not be reordered.
	FixedPosition *bool `json:"fixed_position,omitempty"`
	// The instant when this CustomField was last updated.
	UpdatedAt time.Time `json:"updated_at"`
	// The unique public ID for the CustomField.
	Id string `json:"id"`
	// A collection of legal values for a CustomField.
	Values []CustomFieldEnumValue `json:"values,omitempty"`
	// The type of Custom Field, eg. 'enum'.
	FieldType string `json:"field_type"`
	// An integer indicating the position of this Custom Field with respect to the other CustomField
	Position int64 `json:"position"`
	// The canonical name for a Shortcut-defined field.
	CanonicalName *string `json:"canonical_name,omitempty"`
	// When true, the CustomField can be applied to entities in the Workspace.
	Enabled bool `json:"enabled"`
	// The instant when this CustomField was created.
	CreatedAt time.Time `json:"created_at"`
}

// NewCustomField instantiates a new CustomField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomField(entityType string, name string, updatedAt time.Time, id string, fieldType string, position int64, enabled bool, createdAt time.Time) *CustomField {
	this := CustomField{}
	this.EntityType = entityType
	this.Name = name
	this.UpdatedAt = updatedAt
	this.Id = id
	this.FieldType = fieldType
	this.Position = position
	this.Enabled = enabled
	this.CreatedAt = createdAt
	return &this
}

// NewCustomFieldWithDefaults instantiates a new CustomField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomFieldWithDefaults() *CustomField {
	this := CustomField{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CustomField) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomField) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CustomField) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CustomField) SetDescription(v string) {
	o.Description = &v
}

// GetIconSetIdentifier returns the IconSetIdentifier field value if set, zero value otherwise.
func (o *CustomField) GetIconSetIdentifier() string {
	if o == nil || IsNil(o.IconSetIdentifier) {
		var ret string
		return ret
	}
	return *o.IconSetIdentifier
}

// GetIconSetIdentifierOk returns a tuple with the IconSetIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomField) GetIconSetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.IconSetIdentifier) {
		return nil, false
	}
	return o.IconSetIdentifier, true
}

// HasIconSetIdentifier returns a boolean if a field has been set.
func (o *CustomField) HasIconSetIdentifier() bool {
	if o != nil && !IsNil(o.IconSetIdentifier) {
		return true
	}

	return false
}

// SetIconSetIdentifier gets a reference to the given string and assigns it to the IconSetIdentifier field.
func (o *CustomField) SetIconSetIdentifier(v string) {
	o.IconSetIdentifier = &v
}

// GetEntityType returns the EntityType field value
func (o *CustomField) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *CustomField) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *CustomField) SetEntityType(v string) {
	o.EntityType = v
}

// GetStoryTypes returns the StoryTypes field value if set, zero value otherwise.
func (o *CustomField) GetStoryTypes() []string {
	if o == nil || IsNil(o.StoryTypes) {
		var ret []string
		return ret
	}
	return o.StoryTypes
}

// GetStoryTypesOk returns a tuple with the StoryTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomField) GetStoryTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.StoryTypes) {
		return nil, false
	}
	return o.StoryTypes, true
}

// HasStoryTypes returns a boolean if a field has been set.
func (o *CustomField) HasStoryTypes() bool {
	if o != nil && !IsNil(o.StoryTypes) {
		return true
	}

	return false
}

// SetStoryTypes gets a reference to the given []string and assigns it to the StoryTypes field.
func (o *CustomField) SetStoryTypes(v []string) {
	o.StoryTypes = v
}

// GetName returns the Name field value
func (o *CustomField) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomField) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomField) SetName(v string) {
	o.Name = v
}

// GetFixedPosition returns the FixedPosition field value if set, zero value otherwise.
func (o *CustomField) GetFixedPosition() bool {
	if o == nil || IsNil(o.FixedPosition) {
		var ret bool
		return ret
	}
	return *o.FixedPosition
}

// GetFixedPositionOk returns a tuple with the FixedPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomField) GetFixedPositionOk() (*bool, bool) {
	if o == nil || IsNil(o.FixedPosition) {
		return nil, false
	}
	return o.FixedPosition, true
}

// HasFixedPosition returns a boolean if a field has been set.
func (o *CustomField) HasFixedPosition() bool {
	if o != nil && !IsNil(o.FixedPosition) {
		return true
	}

	return false
}

// SetFixedPosition gets a reference to the given bool and assigns it to the FixedPosition field.
func (o *CustomField) SetFixedPosition(v bool) {
	o.FixedPosition = &v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CustomField) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CustomField) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CustomField) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetId returns the Id field value
func (o *CustomField) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomField) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomField) SetId(v string) {
	o.Id = v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *CustomField) GetValues() []CustomFieldEnumValue {
	if o == nil || IsNil(o.Values) {
		var ret []CustomFieldEnumValue
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomField) GetValuesOk() ([]CustomFieldEnumValue, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *CustomField) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []CustomFieldEnumValue and assigns it to the Values field.
func (o *CustomField) SetValues(v []CustomFieldEnumValue) {
	o.Values = v
}

// GetFieldType returns the FieldType field value
func (o *CustomField) GetFieldType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldType
}

// GetFieldTypeOk returns a tuple with the FieldType field value
// and a boolean to check if the value has been set.
func (o *CustomField) GetFieldTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldType, true
}

// SetFieldType sets field value
func (o *CustomField) SetFieldType(v string) {
	o.FieldType = v
}

// GetPosition returns the Position field value
func (o *CustomField) GetPosition() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *CustomField) GetPositionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *CustomField) SetPosition(v int64) {
	o.Position = v
}

// GetCanonicalName returns the CanonicalName field value if set, zero value otherwise.
func (o *CustomField) GetCanonicalName() string {
	if o == nil || IsNil(o.CanonicalName) {
		var ret string
		return ret
	}
	return *o.CanonicalName
}

// GetCanonicalNameOk returns a tuple with the CanonicalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomField) GetCanonicalNameOk() (*string, bool) {
	if o == nil || IsNil(o.CanonicalName) {
		return nil, false
	}
	return o.CanonicalName, true
}

// HasCanonicalName returns a boolean if a field has been set.
func (o *CustomField) HasCanonicalName() bool {
	if o != nil && !IsNil(o.CanonicalName) {
		return true
	}

	return false
}

// SetCanonicalName gets a reference to the given string and assigns it to the CanonicalName field.
func (o *CustomField) SetCanonicalName(v string) {
	o.CanonicalName = &v
}

// GetEnabled returns the Enabled field value
func (o *CustomField) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *CustomField) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *CustomField) SetEnabled(v bool) {
	o.Enabled = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CustomField) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CustomField) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CustomField) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o CustomField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IconSetIdentifier) {
		toSerialize["icon_set_identifier"] = o.IconSetIdentifier
	}
	toSerialize["entity_type"] = o.EntityType
	if !IsNil(o.StoryTypes) {
		toSerialize["story_types"] = o.StoryTypes
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.FixedPosition) {
		toSerialize["fixed_position"] = o.FixedPosition
	}
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["id"] = o.Id
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	toSerialize["field_type"] = o.FieldType
	toSerialize["position"] = o.Position
	if !IsNil(o.CanonicalName) {
		toSerialize["canonical_name"] = o.CanonicalName
	}
	toSerialize["enabled"] = o.Enabled
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

type NullableCustomField struct {
	value *CustomField
	isSet bool
}

func (v NullableCustomField) Get() *CustomField {
	return v.value
}

func (v *NullableCustomField) Set(val *CustomField) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomField) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomField(val *CustomField) *NullableCustomField {
	return &NullableCustomField{value: val, isSet: true}
}

func (v NullableCustomField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


