/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Task type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Task{}

// Task A Task on a Story.
type Task struct {
	// Full text of the Task.
	Description string `json:"description"`
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// The unique identifier of the parent Story.
	StoryId int64 `json:"story_id"`
	// Deprecated: use member_mention_ids.
	MentionIds []string `json:"mention_ids"`
	// An array of UUIDs of Members mentioned in this Task.
	MemberMentionIds []string `json:"member_mention_ids"`
	// The time/date the Task was completed.
	CompletedAt NullableTime `json:"completed_at"`
	// The time/date the Task was updated.
	UpdatedAt NullableTime `json:"updated_at"`
	// An array of UUIDs of Groups mentioned in this Task.
	GroupMentionIds []string `json:"group_mention_ids"`
	// An array of UUIDs of the Owners of this Task.
	OwnerIds []string `json:"owner_ids"`
	// This field can be set to another unique ID. In the case that the Task has been imported from another tool, the ID in the other tool can be indicated here.
	ExternalId NullableString `json:"external_id"`
	// The unique ID of the Task.
	Id int64 `json:"id"`
	// The number corresponding to the Task's position within a list of Tasks on a Story.
	Position int64 `json:"position"`
	// True/false boolean indicating whether the Task has been completed.
	Complete bool `json:"complete"`
	// The time/date the Task was created.
	CreatedAt time.Time `json:"created_at"`
}

// NewTask instantiates a new Task object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTask(description string, entityType string, storyId int64, mentionIds []string, memberMentionIds []string, completedAt NullableTime, updatedAt NullableTime, groupMentionIds []string, ownerIds []string, externalId NullableString, id int64, position int64, complete bool, createdAt time.Time) *Task {
	this := Task{}
	this.Description = description
	this.EntityType = entityType
	this.StoryId = storyId
	this.MentionIds = mentionIds
	this.MemberMentionIds = memberMentionIds
	this.CompletedAt = completedAt
	this.UpdatedAt = updatedAt
	this.GroupMentionIds = groupMentionIds
	this.OwnerIds = ownerIds
	this.ExternalId = externalId
	this.Id = id
	this.Position = position
	this.Complete = complete
	this.CreatedAt = createdAt
	return &this
}

// NewTaskWithDefaults instantiates a new Task object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskWithDefaults() *Task {
	this := Task{}
	return &this
}

// GetDescription returns the Description field value
func (o *Task) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Task) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Task) SetDescription(v string) {
	o.Description = v
}

// GetEntityType returns the EntityType field value
func (o *Task) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *Task) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *Task) SetEntityType(v string) {
	o.EntityType = v
}

// GetStoryId returns the StoryId field value
func (o *Task) GetStoryId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StoryId
}

// GetStoryIdOk returns a tuple with the StoryId field value
// and a boolean to check if the value has been set.
func (o *Task) GetStoryIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoryId, true
}

// SetStoryId sets field value
func (o *Task) SetStoryId(v int64) {
	o.StoryId = v
}

// GetMentionIds returns the MentionIds field value
func (o *Task) GetMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MentionIds
}

// GetMentionIdsOk returns a tuple with the MentionIds field value
// and a boolean to check if the value has been set.
func (o *Task) GetMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MentionIds, true
}

// SetMentionIds sets field value
func (o *Task) SetMentionIds(v []string) {
	o.MentionIds = v
}

// GetMemberMentionIds returns the MemberMentionIds field value
func (o *Task) GetMemberMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MemberMentionIds
}

// GetMemberMentionIdsOk returns a tuple with the MemberMentionIds field value
// and a boolean to check if the value has been set.
func (o *Task) GetMemberMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberMentionIds, true
}

// SetMemberMentionIds sets field value
func (o *Task) SetMemberMentionIds(v []string) {
	o.MemberMentionIds = v
}

// GetCompletedAt returns the CompletedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Task) GetCompletedAt() time.Time {
	if o == nil || o.CompletedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CompletedAt.Get()
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Task) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAt.Get(), o.CompletedAt.IsSet()
}

// SetCompletedAt sets field value
func (o *Task) SetCompletedAt(v time.Time) {
	o.CompletedAt.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Task) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Task) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *Task) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// GetGroupMentionIds returns the GroupMentionIds field value
func (o *Task) GetGroupMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.GroupMentionIds
}

// GetGroupMentionIdsOk returns a tuple with the GroupMentionIds field value
// and a boolean to check if the value has been set.
func (o *Task) GetGroupMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupMentionIds, true
}

// SetGroupMentionIds sets field value
func (o *Task) SetGroupMentionIds(v []string) {
	o.GroupMentionIds = v
}

// GetOwnerIds returns the OwnerIds field value
func (o *Task) GetOwnerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OwnerIds
}

// GetOwnerIdsOk returns a tuple with the OwnerIds field value
// and a boolean to check if the value has been set.
func (o *Task) GetOwnerIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OwnerIds, true
}

// SetOwnerIds sets field value
func (o *Task) SetOwnerIds(v []string) {
	o.OwnerIds = v
}

// GetExternalId returns the ExternalId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Task) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Task) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// SetExternalId sets field value
func (o *Task) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}

// GetId returns the Id field value
func (o *Task) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Task) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Task) SetId(v int64) {
	o.Id = v
}

// GetPosition returns the Position field value
func (o *Task) GetPosition() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *Task) GetPositionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *Task) SetPosition(v int64) {
	o.Position = v
}

// GetComplete returns the Complete field value
func (o *Task) GetComplete() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value
// and a boolean to check if the value has been set.
func (o *Task) GetCompleteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Complete, true
}

// SetComplete sets field value
func (o *Task) SetComplete(v bool) {
	o.Complete = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Task) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Task) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Task) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o Task) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Task) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["entity_type"] = o.EntityType
	toSerialize["story_id"] = o.StoryId
	toSerialize["mention_ids"] = o.MentionIds
	toSerialize["member_mention_ids"] = o.MemberMentionIds
	toSerialize["completed_at"] = o.CompletedAt.Get()
	toSerialize["updated_at"] = o.UpdatedAt.Get()
	toSerialize["group_mention_ids"] = o.GroupMentionIds
	toSerialize["owner_ids"] = o.OwnerIds
	toSerialize["external_id"] = o.ExternalId.Get()
	toSerialize["id"] = o.Id
	toSerialize["position"] = o.Position
	toSerialize["complete"] = o.Complete
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

type NullableTask struct {
	value *Task
	isSet bool
}

func (v NullableTask) Get() *Task {
	return v.value
}

func (v *NullableTask) Set(val *Task) {
	v.value = val
	v.isSet = true
}

func (v NullableTask) IsSet() bool {
	return v.isSet
}

func (v *NullableTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTask(val *Task) *NullableTask {
	return &NullableTask{value: val, isSet: true}
}

func (v NullableTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


