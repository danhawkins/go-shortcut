/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StoryContentsTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StoryContentsTask{}

// StoryContentsTask struct for StoryContentsTask
type StoryContentsTask struct {
	// Full text of the Task.
	Description string `json:"description"`
	// The number corresponding to the Task's position within a list of Tasks on a Story.
	Position *int64 `json:"position,omitempty"`
	// True/false boolean indicating whether the Task has been completed.
	Complete *bool `json:"complete,omitempty"`
	// An array of UUIDs of the Owners of this Task.
	OwnerIds []string `json:"owner_ids,omitempty"`
	// This field can be set to another unique ID. In the case that the Task has been imported from another tool, the ID in the other tool can be indicated here.
	ExternalId NullableString `json:"external_id,omitempty"`
}

// NewStoryContentsTask instantiates a new StoryContentsTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoryContentsTask(description string) *StoryContentsTask {
	this := StoryContentsTask{}
	this.Description = description
	return &this
}

// NewStoryContentsTaskWithDefaults instantiates a new StoryContentsTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoryContentsTaskWithDefaults() *StoryContentsTask {
	this := StoryContentsTask{}
	return &this
}

// GetDescription returns the Description field value
func (o *StoryContentsTask) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *StoryContentsTask) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *StoryContentsTask) SetDescription(v string) {
	o.Description = v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *StoryContentsTask) GetPosition() int64 {
	if o == nil || IsNil(o.Position) {
		var ret int64
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryContentsTask) GetPositionOk() (*int64, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *StoryContentsTask) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int64 and assigns it to the Position field.
func (o *StoryContentsTask) SetPosition(v int64) {
	o.Position = &v
}

// GetComplete returns the Complete field value if set, zero value otherwise.
func (o *StoryContentsTask) GetComplete() bool {
	if o == nil || IsNil(o.Complete) {
		var ret bool
		return ret
	}
	return *o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryContentsTask) GetCompleteOk() (*bool, bool) {
	if o == nil || IsNil(o.Complete) {
		return nil, false
	}
	return o.Complete, true
}

// HasComplete returns a boolean if a field has been set.
func (o *StoryContentsTask) HasComplete() bool {
	if o != nil && !IsNil(o.Complete) {
		return true
	}

	return false
}

// SetComplete gets a reference to the given bool and assigns it to the Complete field.
func (o *StoryContentsTask) SetComplete(v bool) {
	o.Complete = &v
}

// GetOwnerIds returns the OwnerIds field value if set, zero value otherwise.
func (o *StoryContentsTask) GetOwnerIds() []string {
	if o == nil || IsNil(o.OwnerIds) {
		var ret []string
		return ret
	}
	return o.OwnerIds
}

// GetOwnerIdsOk returns a tuple with the OwnerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryContentsTask) GetOwnerIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.OwnerIds) {
		return nil, false
	}
	return o.OwnerIds, true
}

// HasOwnerIds returns a boolean if a field has been set.
func (o *StoryContentsTask) HasOwnerIds() bool {
	if o != nil && !IsNil(o.OwnerIds) {
		return true
	}

	return false
}

// SetOwnerIds gets a reference to the given []string and assigns it to the OwnerIds field.
func (o *StoryContentsTask) SetOwnerIds(v []string) {
	o.OwnerIds = v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StoryContentsTask) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StoryContentsTask) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *StoryContentsTask) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *StoryContentsTask) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *StoryContentsTask) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *StoryContentsTask) UnsetExternalId() {
	o.ExternalId.Unset()
}

func (o StoryContentsTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StoryContentsTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.Complete) {
		toSerialize["complete"] = o.Complete
	}
	if !IsNil(o.OwnerIds) {
		toSerialize["owner_ids"] = o.OwnerIds
	}
	if o.ExternalId.IsSet() {
		toSerialize["external_id"] = o.ExternalId.Get()
	}
	return toSerialize, nil
}

type NullableStoryContentsTask struct {
	value *StoryContentsTask
	isSet bool
}

func (v NullableStoryContentsTask) Get() *StoryContentsTask {
	return v.value
}

func (v *NullableStoryContentsTask) Set(val *StoryContentsTask) {
	v.value = val
	v.isSet = true
}

func (v NullableStoryContentsTask) IsSet() bool {
	return v.isSet
}

func (v *NullableStoryContentsTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoryContentsTask(val *StoryContentsTask) *NullableStoryContentsTask {
	return &NullableStoryContentsTask{value: val, isSet: true}
}

func (v NullableStoryContentsTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoryContentsTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


