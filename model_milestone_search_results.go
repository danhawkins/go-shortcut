/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MilestoneSearchResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MilestoneSearchResults{}

// MilestoneSearchResults The results of the Milestone search query.
type MilestoneSearchResults struct {
	// The total number of matches for the search query. The first 1000 matches can be paged through via the API.
	Total int64 `json:"total"`
	// A list of search results.
	Data []MilestoneSearchResult `json:"data"`
	// The URL path and query string for the next page of search results.
	Next NullableString `json:"next"`
	Cursors []string `json:"cursors,omitempty"`
}

// NewMilestoneSearchResults instantiates a new MilestoneSearchResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMilestoneSearchResults(total int64, data []MilestoneSearchResult, next NullableString) *MilestoneSearchResults {
	this := MilestoneSearchResults{}
	this.Total = total
	this.Data = data
	this.Next = next
	return &this
}

// NewMilestoneSearchResultsWithDefaults instantiates a new MilestoneSearchResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMilestoneSearchResultsWithDefaults() *MilestoneSearchResults {
	this := MilestoneSearchResults{}
	return &this
}

// GetTotal returns the Total field value
func (o *MilestoneSearchResults) GetTotal() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *MilestoneSearchResults) GetTotalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *MilestoneSearchResults) SetTotal(v int64) {
	o.Total = v
}

// GetData returns the Data field value
func (o *MilestoneSearchResults) GetData() []MilestoneSearchResult {
	if o == nil {
		var ret []MilestoneSearchResult
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *MilestoneSearchResults) GetDataOk() ([]MilestoneSearchResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *MilestoneSearchResults) SetData(v []MilestoneSearchResult) {
	o.Data = v
}

// GetNext returns the Next field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MilestoneSearchResults) GetNext() string {
	if o == nil || o.Next.Get() == nil {
		var ret string
		return ret
	}

	return *o.Next.Get()
}

// GetNextOk returns a tuple with the Next field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MilestoneSearchResults) GetNextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Next.Get(), o.Next.IsSet()
}

// SetNext sets field value
func (o *MilestoneSearchResults) SetNext(v string) {
	o.Next.Set(&v)
}

// GetCursors returns the Cursors field value if set, zero value otherwise.
func (o *MilestoneSearchResults) GetCursors() []string {
	if o == nil || IsNil(o.Cursors) {
		var ret []string
		return ret
	}
	return o.Cursors
}

// GetCursorsOk returns a tuple with the Cursors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MilestoneSearchResults) GetCursorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Cursors) {
		return nil, false
	}
	return o.Cursors, true
}

// HasCursors returns a boolean if a field has been set.
func (o *MilestoneSearchResults) HasCursors() bool {
	if o != nil && !IsNil(o.Cursors) {
		return true
	}

	return false
}

// SetCursors gets a reference to the given []string and assigns it to the Cursors field.
func (o *MilestoneSearchResults) SetCursors(v []string) {
	o.Cursors = v
}

func (o MilestoneSearchResults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MilestoneSearchResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total"] = o.Total
	toSerialize["data"] = o.Data
	toSerialize["next"] = o.Next.Get()
	if !IsNil(o.Cursors) {
		toSerialize["cursors"] = o.Cursors
	}
	return toSerialize, nil
}

type NullableMilestoneSearchResults struct {
	value *MilestoneSearchResults
	isSet bool
}

func (v NullableMilestoneSearchResults) Get() *MilestoneSearchResults {
	return v.value
}

func (v *NullableMilestoneSearchResults) Set(val *MilestoneSearchResults) {
	v.value = val
	v.isSet = true
}

func (v NullableMilestoneSearchResults) IsSet() bool {
	return v.isSet
}

func (v *NullableMilestoneSearchResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMilestoneSearchResults(val *MilestoneSearchResults) *NullableMilestoneSearchResults {
	return &NullableMilestoneSearchResults{value: val, isSet: true}
}

func (v NullableMilestoneSearchResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMilestoneSearchResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


