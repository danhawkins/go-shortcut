/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Profile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Profile{}

// Profile A group of Member profile details.
type Profile struct {
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// A true/false boolean indicating whether the Member has been deactivated within Shortcut.
	Deactivated bool `json:"deactivated"`
	// If Two Factor Authentication is activated for this User.
	TwoFactorAuthActivated *bool `json:"two_factor_auth_activated,omitempty"`
	// The Member's username within the Organization.
	MentionName string `json:"mention_name"`
	// The Member's name within the Organization.
	Name NullableString `json:"name"`
	// This is the gravatar hash associated with email_address.
	GravatarHash NullableString `json:"gravatar_hash"`
	// The unique identifier of the profile.
	Id string `json:"id"`
	DisplayIcon Icon `json:"display_icon"`
	// A boolean indicating whether this profile is an owner at their associated organization.
	IsOwner bool `json:"is_owner"`
	// The primary email address of the Member with the Organization.
	EmailAddress NullableString `json:"email_address"`
}

// NewProfile instantiates a new Profile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfile(entityType string, deactivated bool, mentionName string, name NullableString, gravatarHash NullableString, id string, displayIcon Icon, isOwner bool, emailAddress NullableString) *Profile {
	this := Profile{}
	this.EntityType = entityType
	this.Deactivated = deactivated
	this.MentionName = mentionName
	this.Name = name
	this.GravatarHash = gravatarHash
	this.Id = id
	this.DisplayIcon = displayIcon
	this.IsOwner = isOwner
	this.EmailAddress = emailAddress
	return &this
}

// NewProfileWithDefaults instantiates a new Profile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileWithDefaults() *Profile {
	this := Profile{}
	return &this
}

// GetEntityType returns the EntityType field value
func (o *Profile) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *Profile) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *Profile) SetEntityType(v string) {
	o.EntityType = v
}

// GetDeactivated returns the Deactivated field value
func (o *Profile) GetDeactivated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deactivated
}

// GetDeactivatedOk returns a tuple with the Deactivated field value
// and a boolean to check if the value has been set.
func (o *Profile) GetDeactivatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deactivated, true
}

// SetDeactivated sets field value
func (o *Profile) SetDeactivated(v bool) {
	o.Deactivated = v
}

// GetTwoFactorAuthActivated returns the TwoFactorAuthActivated field value if set, zero value otherwise.
func (o *Profile) GetTwoFactorAuthActivated() bool {
	if o == nil || IsNil(o.TwoFactorAuthActivated) {
		var ret bool
		return ret
	}
	return *o.TwoFactorAuthActivated
}

// GetTwoFactorAuthActivatedOk returns a tuple with the TwoFactorAuthActivated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Profile) GetTwoFactorAuthActivatedOk() (*bool, bool) {
	if o == nil || IsNil(o.TwoFactorAuthActivated) {
		return nil, false
	}
	return o.TwoFactorAuthActivated, true
}

// HasTwoFactorAuthActivated returns a boolean if a field has been set.
func (o *Profile) HasTwoFactorAuthActivated() bool {
	if o != nil && !IsNil(o.TwoFactorAuthActivated) {
		return true
	}

	return false
}

// SetTwoFactorAuthActivated gets a reference to the given bool and assigns it to the TwoFactorAuthActivated field.
func (o *Profile) SetTwoFactorAuthActivated(v bool) {
	o.TwoFactorAuthActivated = &v
}

// GetMentionName returns the MentionName field value
func (o *Profile) GetMentionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MentionName
}

// GetMentionNameOk returns a tuple with the MentionName field value
// and a boolean to check if the value has been set.
func (o *Profile) GetMentionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MentionName, true
}

// SetMentionName sets field value
func (o *Profile) SetMentionName(v string) {
	o.MentionName = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Profile) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Profile) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *Profile) SetName(v string) {
	o.Name.Set(&v)
}

// GetGravatarHash returns the GravatarHash field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Profile) GetGravatarHash() string {
	if o == nil || o.GravatarHash.Get() == nil {
		var ret string
		return ret
	}

	return *o.GravatarHash.Get()
}

// GetGravatarHashOk returns a tuple with the GravatarHash field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Profile) GetGravatarHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GravatarHash.Get(), o.GravatarHash.IsSet()
}

// SetGravatarHash sets field value
func (o *Profile) SetGravatarHash(v string) {
	o.GravatarHash.Set(&v)
}

// GetId returns the Id field value
func (o *Profile) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Profile) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Profile) SetId(v string) {
	o.Id = v
}

// GetDisplayIcon returns the DisplayIcon field value
func (o *Profile) GetDisplayIcon() Icon {
	if o == nil {
		var ret Icon
		return ret
	}

	return o.DisplayIcon
}

// GetDisplayIconOk returns a tuple with the DisplayIcon field value
// and a boolean to check if the value has been set.
func (o *Profile) GetDisplayIconOk() (*Icon, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayIcon, true
}

// SetDisplayIcon sets field value
func (o *Profile) SetDisplayIcon(v Icon) {
	o.DisplayIcon = v
}

// GetIsOwner returns the IsOwner field value
func (o *Profile) GetIsOwner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOwner
}

// GetIsOwnerOk returns a tuple with the IsOwner field value
// and a boolean to check if the value has been set.
func (o *Profile) GetIsOwnerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsOwner, true
}

// SetIsOwner sets field value
func (o *Profile) SetIsOwner(v bool) {
	o.IsOwner = v
}

// GetEmailAddress returns the EmailAddress field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Profile) GetEmailAddress() string {
	if o == nil || o.EmailAddress.Get() == nil {
		var ret string
		return ret
	}

	return *o.EmailAddress.Get()
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Profile) GetEmailAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmailAddress.Get(), o.EmailAddress.IsSet()
}

// SetEmailAddress sets field value
func (o *Profile) SetEmailAddress(v string) {
	o.EmailAddress.Set(&v)
}

func (o Profile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Profile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entity_type"] = o.EntityType
	toSerialize["deactivated"] = o.Deactivated
	if !IsNil(o.TwoFactorAuthActivated) {
		toSerialize["two_factor_auth_activated"] = o.TwoFactorAuthActivated
	}
	toSerialize["mention_name"] = o.MentionName
	toSerialize["name"] = o.Name.Get()
	toSerialize["gravatar_hash"] = o.GravatarHash.Get()
	toSerialize["id"] = o.Id
	toSerialize["display_icon"] = o.DisplayIcon
	toSerialize["is_owner"] = o.IsOwner
	toSerialize["email_address"] = o.EmailAddress.Get()
	return toSerialize, nil
}

type NullableProfile struct {
	value *Profile
	isSet bool
}

func (v NullableProfile) Get() *Profile {
	return v.value
}

func (v *NullableProfile) Set(val *Profile) {
	v.value = val
	v.isSet = true
}

func (v NullableProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfile(val *Profile) *NullableProfile {
	return &NullableProfile{value: val, isSet: true}
}

func (v NullableProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


