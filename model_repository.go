/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Repository type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Repository{}

// Repository Repository refers to a VCS repository.
type Repository struct {
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// The shorthand name of the VCS repository.
	Name NullableString `json:"name"`
	// The VCS provider for the Repository.
	Type string `json:"type"`
	// The time/date the Repository was updated.
	UpdatedAt NullableTime `json:"updated_at"`
	// The VCS unique identifier for the Repository.
	ExternalId NullableString `json:"external_id"`
	// The ID associated to the VCS repository in Shortcut.
	Id NullableInt64 `json:"id"`
	// The URL of the Repository.
	Url NullableString `json:"url"`
	// The full name of the VCS repository.
	FullName NullableString `json:"full_name"`
	// The time/date the Repository was created.
	CreatedAt NullableTime `json:"created_at"`
}

// NewRepository instantiates a new Repository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepository(entityType string, name NullableString, type_ string, updatedAt NullableTime, externalId NullableString, id NullableInt64, url NullableString, fullName NullableString, createdAt NullableTime) *Repository {
	this := Repository{}
	this.EntityType = entityType
	this.Name = name
	this.Type = type_
	this.UpdatedAt = updatedAt
	this.ExternalId = externalId
	this.Id = id
	this.Url = url
	this.FullName = fullName
	this.CreatedAt = createdAt
	return &this
}

// NewRepositoryWithDefaults instantiates a new Repository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryWithDefaults() *Repository {
	this := Repository{}
	return &this
}

// GetEntityType returns the EntityType field value
func (o *Repository) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *Repository) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *Repository) SetEntityType(v string) {
	o.EntityType = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Repository) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Repository) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *Repository) SetName(v string) {
	o.Name.Set(&v)
}

// GetType returns the Type field value
func (o *Repository) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Repository) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Repository) SetType(v string) {
	o.Type = v
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Repository) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Repository) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *Repository) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// GetExternalId returns the ExternalId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Repository) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Repository) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// SetExternalId sets field value
func (o *Repository) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *Repository) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Repository) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *Repository) SetId(v int64) {
	o.Id.Set(&v)
}

// GetUrl returns the Url field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Repository) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}

	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Repository) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// SetUrl sets field value
func (o *Repository) SetUrl(v string) {
	o.Url.Set(&v)
}

// GetFullName returns the FullName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Repository) GetFullName() string {
	if o == nil || o.FullName.Get() == nil {
		var ret string
		return ret
	}

	return *o.FullName.Get()
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Repository) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullName.Get(), o.FullName.IsSet()
}

// SetFullName sets field value
func (o *Repository) SetFullName(v string) {
	o.FullName.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Repository) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Repository) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *Repository) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

func (o Repository) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Repository) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entity_type"] = o.EntityType
	toSerialize["name"] = o.Name.Get()
	toSerialize["type"] = o.Type
	toSerialize["updated_at"] = o.UpdatedAt.Get()
	toSerialize["external_id"] = o.ExternalId.Get()
	toSerialize["id"] = o.Id.Get()
	toSerialize["url"] = o.Url.Get()
	toSerialize["full_name"] = o.FullName.Get()
	toSerialize["created_at"] = o.CreatedAt.Get()
	return toSerialize, nil
}

type NullableRepository struct {
	value *Repository
	isSet bool
}

func (v NullableRepository) Get() *Repository {
	return v.value
}

func (v *NullableRepository) Set(val *Repository) {
	v.value = val
	v.isSet = true
}

func (v NullableRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepository(val *Repository) *NullableRepository {
	return &NullableRepository{value: val, isSet: true}
}

func (v NullableRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


