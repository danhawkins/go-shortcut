/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StoryHistoryChangeAddsRemovesInt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StoryHistoryChangeAddsRemovesInt{}

// StoryHistoryChangeAddsRemovesInt Task IDs that have been added or removed from the Story.
type StoryHistoryChangeAddsRemovesInt struct {
	// The values that have been added.
	Adds []int64 `json:"adds,omitempty"`
	// The values that have been removed
	Removes []int64 `json:"removes,omitempty"`
}

// NewStoryHistoryChangeAddsRemovesInt instantiates a new StoryHistoryChangeAddsRemovesInt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoryHistoryChangeAddsRemovesInt() *StoryHistoryChangeAddsRemovesInt {
	this := StoryHistoryChangeAddsRemovesInt{}
	return &this
}

// NewStoryHistoryChangeAddsRemovesIntWithDefaults instantiates a new StoryHistoryChangeAddsRemovesInt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoryHistoryChangeAddsRemovesIntWithDefaults() *StoryHistoryChangeAddsRemovesInt {
	this := StoryHistoryChangeAddsRemovesInt{}
	return &this
}

// GetAdds returns the Adds field value if set, zero value otherwise.
func (o *StoryHistoryChangeAddsRemovesInt) GetAdds() []int64 {
	if o == nil || IsNil(o.Adds) {
		var ret []int64
		return ret
	}
	return o.Adds
}

// GetAddsOk returns a tuple with the Adds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryHistoryChangeAddsRemovesInt) GetAddsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Adds) {
		return nil, false
	}
	return o.Adds, true
}

// HasAdds returns a boolean if a field has been set.
func (o *StoryHistoryChangeAddsRemovesInt) HasAdds() bool {
	if o != nil && !IsNil(o.Adds) {
		return true
	}

	return false
}

// SetAdds gets a reference to the given []int64 and assigns it to the Adds field.
func (o *StoryHistoryChangeAddsRemovesInt) SetAdds(v []int64) {
	o.Adds = v
}

// GetRemoves returns the Removes field value if set, zero value otherwise.
func (o *StoryHistoryChangeAddsRemovesInt) GetRemoves() []int64 {
	if o == nil || IsNil(o.Removes) {
		var ret []int64
		return ret
	}
	return o.Removes
}

// GetRemovesOk returns a tuple with the Removes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryHistoryChangeAddsRemovesInt) GetRemovesOk() ([]int64, bool) {
	if o == nil || IsNil(o.Removes) {
		return nil, false
	}
	return o.Removes, true
}

// HasRemoves returns a boolean if a field has been set.
func (o *StoryHistoryChangeAddsRemovesInt) HasRemoves() bool {
	if o != nil && !IsNil(o.Removes) {
		return true
	}

	return false
}

// SetRemoves gets a reference to the given []int64 and assigns it to the Removes field.
func (o *StoryHistoryChangeAddsRemovesInt) SetRemoves(v []int64) {
	o.Removes = v
}

func (o StoryHistoryChangeAddsRemovesInt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StoryHistoryChangeAddsRemovesInt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Adds) {
		toSerialize["adds"] = o.Adds
	}
	if !IsNil(o.Removes) {
		toSerialize["removes"] = o.Removes
	}
	return toSerialize, nil
}

type NullableStoryHistoryChangeAddsRemovesInt struct {
	value *StoryHistoryChangeAddsRemovesInt
	isSet bool
}

func (v NullableStoryHistoryChangeAddsRemovesInt) Get() *StoryHistoryChangeAddsRemovesInt {
	return v.value
}

func (v *NullableStoryHistoryChangeAddsRemovesInt) Set(val *StoryHistoryChangeAddsRemovesInt) {
	v.value = val
	v.isSet = true
}

func (v NullableStoryHistoryChangeAddsRemovesInt) IsSet() bool {
	return v.isSet
}

func (v *NullableStoryHistoryChangeAddsRemovesInt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoryHistoryChangeAddsRemovesInt(val *StoryHistoryChangeAddsRemovesInt) *NullableStoryHistoryChangeAddsRemovesInt {
	return &NullableStoryHistoryChangeAddsRemovesInt{value: val, isSet: true}
}

func (v NullableStoryHistoryChangeAddsRemovesInt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoryHistoryChangeAddsRemovesInt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


