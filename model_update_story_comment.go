/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateStoryComment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStoryComment{}

// UpdateStoryComment struct for UpdateStoryComment
type UpdateStoryComment struct {
	// The updated comment text.
	Text string `json:"text"`
}

// NewUpdateStoryComment instantiates a new UpdateStoryComment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStoryComment(text string) *UpdateStoryComment {
	this := UpdateStoryComment{}
	this.Text = text
	return &this
}

// NewUpdateStoryCommentWithDefaults instantiates a new UpdateStoryComment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStoryCommentWithDefaults() *UpdateStoryComment {
	this := UpdateStoryComment{}
	return &this
}

// GetText returns the Text field value
func (o *UpdateStoryComment) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *UpdateStoryComment) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *UpdateStoryComment) SetText(v string) {
	o.Text = v
}

func (o UpdateStoryComment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStoryComment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["text"] = o.Text
	return toSerialize, nil
}

type NullableUpdateStoryComment struct {
	value *UpdateStoryComment
	isSet bool
}

func (v NullableUpdateStoryComment) Get() *UpdateStoryComment {
	return v.value
}

func (v *NullableUpdateStoryComment) Set(val *UpdateStoryComment) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStoryComment) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStoryComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStoryComment(val *UpdateStoryComment) *NullableUpdateStoryComment {
	return &NullableUpdateStoryComment{value: val, isSet: true}
}

func (v NullableUpdateStoryComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStoryComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


