/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MaxSearchResultsExceededError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaxSearchResultsExceededError{}

// MaxSearchResultsExceededError Error returned when total maximum supported results have been reached.
type MaxSearchResultsExceededError struct {
	// The name for this type of error, `maximum-results-exceeded`
	Error string `json:"error"`
	// An explanatory message: \"A maximum of 1000 search results are supported.\"
	Message string `json:"message"`
	// The maximum number of search results supported, `1000`
	MaximumResults int64 `json:"maximum-results"`
}

// NewMaxSearchResultsExceededError instantiates a new MaxSearchResultsExceededError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaxSearchResultsExceededError(error_ string, message string, maximumResults int64) *MaxSearchResultsExceededError {
	this := MaxSearchResultsExceededError{}
	this.Error = error_
	this.Message = message
	this.MaximumResults = maximumResults
	return &this
}

// NewMaxSearchResultsExceededErrorWithDefaults instantiates a new MaxSearchResultsExceededError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaxSearchResultsExceededErrorWithDefaults() *MaxSearchResultsExceededError {
	this := MaxSearchResultsExceededError{}
	return &this
}

// GetError returns the Error field value
func (o *MaxSearchResultsExceededError) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *MaxSearchResultsExceededError) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *MaxSearchResultsExceededError) SetError(v string) {
	o.Error = v
}

// GetMessage returns the Message field value
func (o *MaxSearchResultsExceededError) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *MaxSearchResultsExceededError) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *MaxSearchResultsExceededError) SetMessage(v string) {
	o.Message = v
}

// GetMaximumResults returns the MaximumResults field value
func (o *MaxSearchResultsExceededError) GetMaximumResults() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaximumResults
}

// GetMaximumResultsOk returns a tuple with the MaximumResults field value
// and a boolean to check if the value has been set.
func (o *MaxSearchResultsExceededError) GetMaximumResultsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaximumResults, true
}

// SetMaximumResults sets field value
func (o *MaxSearchResultsExceededError) SetMaximumResults(v int64) {
	o.MaximumResults = v
}

func (o MaxSearchResultsExceededError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaxSearchResultsExceededError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["error"] = o.Error
	toSerialize["message"] = o.Message
	toSerialize["maximum-results"] = o.MaximumResults
	return toSerialize, nil
}

type NullableMaxSearchResultsExceededError struct {
	value *MaxSearchResultsExceededError
	isSet bool
}

func (v NullableMaxSearchResultsExceededError) Get() *MaxSearchResultsExceededError {
	return v.value
}

func (v *NullableMaxSearchResultsExceededError) Set(val *MaxSearchResultsExceededError) {
	v.value = val
	v.isSet = true
}

func (v NullableMaxSearchResultsExceededError) IsSet() bool {
	return v.isSet
}

func (v *NullableMaxSearchResultsExceededError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaxSearchResultsExceededError(val *MaxSearchResultsExceededError) *NullableMaxSearchResultsExceededError {
	return &NullableMaxSearchResultsExceededError{value: val, isSet: true}
}

func (v NullableMaxSearchResultsExceededError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaxSearchResultsExceededError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


