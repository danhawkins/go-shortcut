/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Project type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Project{}

// Project Projects typically map to teams (such as Frontend, Backend, Mobile, Devops, etc) but can represent any open-ended product, component, or initiative.
type Project struct {
	// The Shortcut application url for the Project.
	AppUrl string `json:"app_url"`
	// The description of the Project.
	Description NullableString `json:"description"`
	// True/false boolean indicating whether the Project is in an Archived state.
	Archived bool `json:"archived"`
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// The number of days before the thermometer appears in the Story summary.
	DaysToThermometer int64 `json:"days_to_thermometer"`
	// The color associated with the Project in the Shortcut member interface.
	Color NullableString `json:"color"`
	// The ID of the workflow the project belongs to.
	WorkflowId int64 `json:"workflow_id"`
	// The name of the Project
	Name string `json:"name"`
	// The Global ID of the Project.
	GlobalId string `json:"global_id"`
	// The date at which the Project was started.
	StartTime time.Time `json:"start_time"`
	// The time/date that the Project was last updated.
	UpdatedAt NullableTime `json:"updated_at"`
	// An array of UUIDs for any Members listed as Followers.
	FollowerIds []string `json:"follower_ids"`
	// This field can be set to another unique ID. In the case that the Project has been imported from another tool, the ID in the other tool can be indicated here.
	ExternalId NullableString `json:"external_id"`
	// The unique ID of the Project.
	Id int64 `json:"id"`
	// Configuration to enable or disable thermometers in the Story summary.
	ShowThermometer bool `json:"show_thermometer"`
	// The ID of the team the project belongs to.
	TeamId int64 `json:"team_id"`
	// The number of weeks per iteration in this Project.
	IterationLength int64 `json:"iteration_length"`
	// The Project abbreviation used in Story summaries. Should be kept to 3 characters at most.
	Abbreviation NullableString `json:"abbreviation"`
	Stats ProjectStats `json:"stats"`
	// The time/date that the Project was created.
	CreatedAt NullableTime `json:"created_at"`
}

// NewProject instantiates a new Project object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProject(appUrl string, description NullableString, archived bool, entityType string, daysToThermometer int64, color NullableString, workflowId int64, name string, globalId string, startTime time.Time, updatedAt NullableTime, followerIds []string, externalId NullableString, id int64, showThermometer bool, teamId int64, iterationLength int64, abbreviation NullableString, stats ProjectStats, createdAt NullableTime) *Project {
	this := Project{}
	this.AppUrl = appUrl
	this.Description = description
	this.Archived = archived
	this.EntityType = entityType
	this.DaysToThermometer = daysToThermometer
	this.Color = color
	this.WorkflowId = workflowId
	this.Name = name
	this.GlobalId = globalId
	this.StartTime = startTime
	this.UpdatedAt = updatedAt
	this.FollowerIds = followerIds
	this.ExternalId = externalId
	this.Id = id
	this.ShowThermometer = showThermometer
	this.TeamId = teamId
	this.IterationLength = iterationLength
	this.Abbreviation = abbreviation
	this.Stats = stats
	this.CreatedAt = createdAt
	return &this
}

// NewProjectWithDefaults instantiates a new Project object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectWithDefaults() *Project {
	this := Project{}
	return &this
}

// GetAppUrl returns the AppUrl field value
func (o *Project) GetAppUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppUrl
}

// GetAppUrlOk returns a tuple with the AppUrl field value
// and a boolean to check if the value has been set.
func (o *Project) GetAppUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppUrl, true
}

// SetAppUrl sets field value
func (o *Project) SetAppUrl(v string) {
	o.AppUrl = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Project) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Project) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *Project) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetArchived returns the Archived field value
func (o *Project) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *Project) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *Project) SetArchived(v bool) {
	o.Archived = v
}

// GetEntityType returns the EntityType field value
func (o *Project) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *Project) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *Project) SetEntityType(v string) {
	o.EntityType = v
}

// GetDaysToThermometer returns the DaysToThermometer field value
func (o *Project) GetDaysToThermometer() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DaysToThermometer
}

// GetDaysToThermometerOk returns a tuple with the DaysToThermometer field value
// and a boolean to check if the value has been set.
func (o *Project) GetDaysToThermometerOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DaysToThermometer, true
}

// SetDaysToThermometer sets field value
func (o *Project) SetDaysToThermometer(v int64) {
	o.DaysToThermometer = v
}

// GetColor returns the Color field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Project) GetColor() string {
	if o == nil || o.Color.Get() == nil {
		var ret string
		return ret
	}

	return *o.Color.Get()
}

// GetColorOk returns a tuple with the Color field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Project) GetColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Color.Get(), o.Color.IsSet()
}

// SetColor sets field value
func (o *Project) SetColor(v string) {
	o.Color.Set(&v)
}

// GetWorkflowId returns the WorkflowId field value
func (o *Project) GetWorkflowId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value
// and a boolean to check if the value has been set.
func (o *Project) GetWorkflowIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowId, true
}

// SetWorkflowId sets field value
func (o *Project) SetWorkflowId(v int64) {
	o.WorkflowId = v
}

// GetName returns the Name field value
func (o *Project) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Project) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Project) SetName(v string) {
	o.Name = v
}

// GetGlobalId returns the GlobalId field value
func (o *Project) GetGlobalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GlobalId
}

// GetGlobalIdOk returns a tuple with the GlobalId field value
// and a boolean to check if the value has been set.
func (o *Project) GetGlobalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalId, true
}

// SetGlobalId sets field value
func (o *Project) SetGlobalId(v string) {
	o.GlobalId = v
}

// GetStartTime returns the StartTime field value
func (o *Project) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *Project) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *Project) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Project) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Project) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *Project) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// GetFollowerIds returns the FollowerIds field value
func (o *Project) GetFollowerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.FollowerIds
}

// GetFollowerIdsOk returns a tuple with the FollowerIds field value
// and a boolean to check if the value has been set.
func (o *Project) GetFollowerIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FollowerIds, true
}

// SetFollowerIds sets field value
func (o *Project) SetFollowerIds(v []string) {
	o.FollowerIds = v
}

// GetExternalId returns the ExternalId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Project) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Project) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// SetExternalId sets field value
func (o *Project) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}

// GetId returns the Id field value
func (o *Project) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Project) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Project) SetId(v int64) {
	o.Id = v
}

// GetShowThermometer returns the ShowThermometer field value
func (o *Project) GetShowThermometer() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShowThermometer
}

// GetShowThermometerOk returns a tuple with the ShowThermometer field value
// and a boolean to check if the value has been set.
func (o *Project) GetShowThermometerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShowThermometer, true
}

// SetShowThermometer sets field value
func (o *Project) SetShowThermometer(v bool) {
	o.ShowThermometer = v
}

// GetTeamId returns the TeamId field value
func (o *Project) GetTeamId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value
// and a boolean to check if the value has been set.
func (o *Project) GetTeamIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamId, true
}

// SetTeamId sets field value
func (o *Project) SetTeamId(v int64) {
	o.TeamId = v
}

// GetIterationLength returns the IterationLength field value
func (o *Project) GetIterationLength() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IterationLength
}

// GetIterationLengthOk returns a tuple with the IterationLength field value
// and a boolean to check if the value has been set.
func (o *Project) GetIterationLengthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IterationLength, true
}

// SetIterationLength sets field value
func (o *Project) SetIterationLength(v int64) {
	o.IterationLength = v
}

// GetAbbreviation returns the Abbreviation field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Project) GetAbbreviation() string {
	if o == nil || o.Abbreviation.Get() == nil {
		var ret string
		return ret
	}

	return *o.Abbreviation.Get()
}

// GetAbbreviationOk returns a tuple with the Abbreviation field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Project) GetAbbreviationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Abbreviation.Get(), o.Abbreviation.IsSet()
}

// SetAbbreviation sets field value
func (o *Project) SetAbbreviation(v string) {
	o.Abbreviation.Set(&v)
}

// GetStats returns the Stats field value
func (o *Project) GetStats() ProjectStats {
	if o == nil {
		var ret ProjectStats
		return ret
	}

	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value
// and a boolean to check if the value has been set.
func (o *Project) GetStatsOk() (*ProjectStats, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stats, true
}

// SetStats sets field value
func (o *Project) SetStats(v ProjectStats) {
	o.Stats = v
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Project) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Project) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *Project) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

func (o Project) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Project) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app_url"] = o.AppUrl
	toSerialize["description"] = o.Description.Get()
	toSerialize["archived"] = o.Archived
	toSerialize["entity_type"] = o.EntityType
	toSerialize["days_to_thermometer"] = o.DaysToThermometer
	toSerialize["color"] = o.Color.Get()
	toSerialize["workflow_id"] = o.WorkflowId
	toSerialize["name"] = o.Name
	toSerialize["global_id"] = o.GlobalId
	toSerialize["start_time"] = o.StartTime
	toSerialize["updated_at"] = o.UpdatedAt.Get()
	toSerialize["follower_ids"] = o.FollowerIds
	toSerialize["external_id"] = o.ExternalId.Get()
	toSerialize["id"] = o.Id
	toSerialize["show_thermometer"] = o.ShowThermometer
	toSerialize["team_id"] = o.TeamId
	toSerialize["iteration_length"] = o.IterationLength
	toSerialize["abbreviation"] = o.Abbreviation.Get()
	toSerialize["stats"] = o.Stats
	toSerialize["created_at"] = o.CreatedAt.Get()
	return toSerialize, nil
}

type NullableProject struct {
	value *Project
	isSet bool
}

func (v NullableProject) Get() *Project {
	return v.value
}

func (v *NullableProject) Set(val *Project) {
	v.value = val
	v.isSet = true
}

func (v NullableProject) IsSet() bool {
	return v.isSet
}

func (v *NullableProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProject(val *Project) *NullableProject {
	return &NullableProject{value: val, isSet: true}
}

func (v NullableProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


