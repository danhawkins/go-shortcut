/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateStories type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateStories{}

// CreateStories struct for CreateStories
type CreateStories struct {
	// An array of stories to be created.
	Stories []CreateStoryParams `json:"stories"`
}

// NewCreateStories instantiates a new CreateStories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStories(stories []CreateStoryParams) *CreateStories {
	this := CreateStories{}
	this.Stories = stories
	return &this
}

// NewCreateStoriesWithDefaults instantiates a new CreateStories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStoriesWithDefaults() *CreateStories {
	this := CreateStories{}
	return &this
}

// GetStories returns the Stories field value
func (o *CreateStories) GetStories() []CreateStoryParams {
	if o == nil {
		var ret []CreateStoryParams
		return ret
	}

	return o.Stories
}

// GetStoriesOk returns a tuple with the Stories field value
// and a boolean to check if the value has been set.
func (o *CreateStories) GetStoriesOk() ([]CreateStoryParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stories, true
}

// SetStories sets field value
func (o *CreateStories) SetStories(v []CreateStoryParams) {
	o.Stories = v
}

func (o CreateStories) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateStories) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["stories"] = o.Stories
	return toSerialize, nil
}

type NullableCreateStories struct {
	value *CreateStories
	isSet bool
}

func (v NullableCreateStories) Get() *CreateStories {
	return v.value
}

func (v *NullableCreateStories) Set(val *CreateStories) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStories) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStories(val *CreateStories) *NullableCreateStories {
	return &NullableCreateStories{value: val, isSet: true}
}

func (v NullableCreateStories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


