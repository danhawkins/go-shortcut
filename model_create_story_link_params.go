/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateStoryLinkParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateStoryLinkParams{}

// CreateStoryLinkParams Request parameters for creating a Story Link within a Story.
type CreateStoryLinkParams struct {
	// The unique ID of the Story defined as subject.
	SubjectId *int64 `json:"subject_id,omitempty"`
	// How the subject Story acts on the object Story. This can be \"blocks\", \"duplicates\", or \"relates to\".
	Verb string `json:"verb"`
	// The unique ID of the Story defined as object.
	ObjectId *int64 `json:"object_id,omitempty"`
}

// NewCreateStoryLinkParams instantiates a new CreateStoryLinkParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStoryLinkParams(verb string) *CreateStoryLinkParams {
	this := CreateStoryLinkParams{}
	this.Verb = verb
	return &this
}

// NewCreateStoryLinkParamsWithDefaults instantiates a new CreateStoryLinkParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStoryLinkParamsWithDefaults() *CreateStoryLinkParams {
	this := CreateStoryLinkParams{}
	return &this
}

// GetSubjectId returns the SubjectId field value if set, zero value otherwise.
func (o *CreateStoryLinkParams) GetSubjectId() int64 {
	if o == nil || IsNil(o.SubjectId) {
		var ret int64
		return ret
	}
	return *o.SubjectId
}

// GetSubjectIdOk returns a tuple with the SubjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStoryLinkParams) GetSubjectIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SubjectId) {
		return nil, false
	}
	return o.SubjectId, true
}

// HasSubjectId returns a boolean if a field has been set.
func (o *CreateStoryLinkParams) HasSubjectId() bool {
	if o != nil && !IsNil(o.SubjectId) {
		return true
	}

	return false
}

// SetSubjectId gets a reference to the given int64 and assigns it to the SubjectId field.
func (o *CreateStoryLinkParams) SetSubjectId(v int64) {
	o.SubjectId = &v
}

// GetVerb returns the Verb field value
func (o *CreateStoryLinkParams) GetVerb() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Verb
}

// GetVerbOk returns a tuple with the Verb field value
// and a boolean to check if the value has been set.
func (o *CreateStoryLinkParams) GetVerbOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verb, true
}

// SetVerb sets field value
func (o *CreateStoryLinkParams) SetVerb(v string) {
	o.Verb = v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *CreateStoryLinkParams) GetObjectId() int64 {
	if o == nil || IsNil(o.ObjectId) {
		var ret int64
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStoryLinkParams) GetObjectIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *CreateStoryLinkParams) HasObjectId() bool {
	if o != nil && !IsNil(o.ObjectId) {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given int64 and assigns it to the ObjectId field.
func (o *CreateStoryLinkParams) SetObjectId(v int64) {
	o.ObjectId = &v
}

func (o CreateStoryLinkParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateStoryLinkParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubjectId) {
		toSerialize["subject_id"] = o.SubjectId
	}
	toSerialize["verb"] = o.Verb
	if !IsNil(o.ObjectId) {
		toSerialize["object_id"] = o.ObjectId
	}
	return toSerialize, nil
}

type NullableCreateStoryLinkParams struct {
	value *CreateStoryLinkParams
	isSet bool
}

func (v NullableCreateStoryLinkParams) Get() *CreateStoryLinkParams {
	return v.value
}

func (v *NullableCreateStoryLinkParams) Set(val *CreateStoryLinkParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStoryLinkParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStoryLinkParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStoryLinkParams(val *CreateStoryLinkParams) *NullableCreateStoryLinkParams {
	return &NullableCreateStoryLinkParams{value: val, isSet: true}
}

func (v NullableCreateStoryLinkParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStoryLinkParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


