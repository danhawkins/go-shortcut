/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CustomFieldValueParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomFieldValueParams{}

// CustomFieldValueParams struct for CustomFieldValueParams
type CustomFieldValueParams struct {
	// The unique public ID for the CustomField.
	FieldId string `json:"field_id"`
	// The unique public ID for the CustomFieldEnumValue.
	ValueId string `json:"value_id"`
	// A literal value for the CustomField. Currently ignored.
	Value *string `json:"value,omitempty"`
}

// NewCustomFieldValueParams instantiates a new CustomFieldValueParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomFieldValueParams(fieldId string, valueId string) *CustomFieldValueParams {
	this := CustomFieldValueParams{}
	this.FieldId = fieldId
	this.ValueId = valueId
	return &this
}

// NewCustomFieldValueParamsWithDefaults instantiates a new CustomFieldValueParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomFieldValueParamsWithDefaults() *CustomFieldValueParams {
	this := CustomFieldValueParams{}
	return &this
}

// GetFieldId returns the FieldId field value
func (o *CustomFieldValueParams) GetFieldId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldId
}

// GetFieldIdOk returns a tuple with the FieldId field value
// and a boolean to check if the value has been set.
func (o *CustomFieldValueParams) GetFieldIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldId, true
}

// SetFieldId sets field value
func (o *CustomFieldValueParams) SetFieldId(v string) {
	o.FieldId = v
}

// GetValueId returns the ValueId field value
func (o *CustomFieldValueParams) GetValueId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValueId
}

// GetValueIdOk returns a tuple with the ValueId field value
// and a boolean to check if the value has been set.
func (o *CustomFieldValueParams) GetValueIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueId, true
}

// SetValueId sets field value
func (o *CustomFieldValueParams) SetValueId(v string) {
	o.ValueId = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CustomFieldValueParams) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldValueParams) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CustomFieldValueParams) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *CustomFieldValueParams) SetValue(v string) {
	o.Value = &v
}

func (o CustomFieldValueParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomFieldValueParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field_id"] = o.FieldId
	toSerialize["value_id"] = o.ValueId
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableCustomFieldValueParams struct {
	value *CustomFieldValueParams
	isSet bool
}

func (v NullableCustomFieldValueParams) Get() *CustomFieldValueParams {
	return v.value
}

func (v *NullableCustomFieldValueParams) Set(val *CustomFieldValueParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomFieldValueParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomFieldValueParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomFieldValueParams(val *CustomFieldValueParams) *NullableCustomFieldValueParams {
	return &NullableCustomFieldValueParams{value: val, isSet: true}
}

func (v NullableCustomFieldValueParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomFieldValueParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


