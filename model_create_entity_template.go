/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateEntityTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEntityTemplate{}

// CreateEntityTemplate Request paramaters for creating an entirely new entity template.
type CreateEntityTemplate struct {
	// The name of the new entity template
	Name string `json:"name"`
	// The id of the user creating this template.
	AuthorId *string `json:"author_id,omitempty"`
	StoryContents CreateStoryContents `json:"story_contents"`
}

// NewCreateEntityTemplate instantiates a new CreateEntityTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEntityTemplate(name string, storyContents CreateStoryContents) *CreateEntityTemplate {
	this := CreateEntityTemplate{}
	this.Name = name
	this.StoryContents = storyContents
	return &this
}

// NewCreateEntityTemplateWithDefaults instantiates a new CreateEntityTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEntityTemplateWithDefaults() *CreateEntityTemplate {
	this := CreateEntityTemplate{}
	return &this
}

// GetName returns the Name field value
func (o *CreateEntityTemplate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateEntityTemplate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateEntityTemplate) SetName(v string) {
	o.Name = v
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *CreateEntityTemplate) GetAuthorId() string {
	if o == nil || IsNil(o.AuthorId) {
		var ret string
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEntityTemplate) GetAuthorIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorId) {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *CreateEntityTemplate) HasAuthorId() bool {
	if o != nil && !IsNil(o.AuthorId) {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given string and assigns it to the AuthorId field.
func (o *CreateEntityTemplate) SetAuthorId(v string) {
	o.AuthorId = &v
}

// GetStoryContents returns the StoryContents field value
func (o *CreateEntityTemplate) GetStoryContents() CreateStoryContents {
	if o == nil {
		var ret CreateStoryContents
		return ret
	}

	return o.StoryContents
}

// GetStoryContentsOk returns a tuple with the StoryContents field value
// and a boolean to check if the value has been set.
func (o *CreateEntityTemplate) GetStoryContentsOk() (*CreateStoryContents, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoryContents, true
}

// SetStoryContents sets field value
func (o *CreateEntityTemplate) SetStoryContents(v CreateStoryContents) {
	o.StoryContents = v
}

func (o CreateEntityTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEntityTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.AuthorId) {
		toSerialize["author_id"] = o.AuthorId
	}
	toSerialize["story_contents"] = o.StoryContents
	return toSerialize, nil
}

type NullableCreateEntityTemplate struct {
	value *CreateEntityTemplate
	isSet bool
}

func (v NullableCreateEntityTemplate) Get() *CreateEntityTemplate {
	return v.value
}

func (v *NullableCreateEntityTemplate) Set(val *CreateEntityTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEntityTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEntityTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEntityTemplate(val *CreateEntityTemplate) *NullableCreateEntityTemplate {
	return &NullableCreateEntityTemplate{value: val, isSet: true}
}

func (v NullableCreateEntityTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEntityTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


