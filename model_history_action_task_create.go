/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HistoryActionTaskCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HistoryActionTaskCreate{}

// HistoryActionTaskCreate An action representing a Task being created.
type HistoryActionTaskCreate struct {
	// The description of the Task.
	Description string `json:"description"`
	// The type of entity referenced.
	EntityType string `json:"entity_type"`
	// An array of Member IDs that represent who has been mentioned in the Task.
	MentionIds []string `json:"mention_ids,omitempty"`
	// An array of Groups IDs that represent which have been mentioned in the Task.
	GroupMentionIds []string `json:"group_mention_ids,omitempty"`
	// An array of Member IDs that represent the Task's owners.
	OwnerIds []string `json:"owner_ids,omitempty"`
	// The ID of the entity referenced.
	Id int64 `json:"id"`
	// The action of the entity referenced.
	Action string `json:"action"`
	// Whether or not the Task is complete.
	Complete bool `json:"complete"`
	// A timestamp that represent's the Task's deadline.
	Deadline *string `json:"deadline,omitempty"`
}

// NewHistoryActionTaskCreate instantiates a new HistoryActionTaskCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHistoryActionTaskCreate(description string, entityType string, id int64, action string, complete bool) *HistoryActionTaskCreate {
	this := HistoryActionTaskCreate{}
	this.Description = description
	this.EntityType = entityType
	this.Id = id
	this.Action = action
	this.Complete = complete
	return &this
}

// NewHistoryActionTaskCreateWithDefaults instantiates a new HistoryActionTaskCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHistoryActionTaskCreateWithDefaults() *HistoryActionTaskCreate {
	this := HistoryActionTaskCreate{}
	return &this
}

// GetDescription returns the Description field value
func (o *HistoryActionTaskCreate) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *HistoryActionTaskCreate) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *HistoryActionTaskCreate) SetDescription(v string) {
	o.Description = v
}

// GetEntityType returns the EntityType field value
func (o *HistoryActionTaskCreate) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *HistoryActionTaskCreate) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *HistoryActionTaskCreate) SetEntityType(v string) {
	o.EntityType = v
}

// GetMentionIds returns the MentionIds field value if set, zero value otherwise.
func (o *HistoryActionTaskCreate) GetMentionIds() []string {
	if o == nil || IsNil(o.MentionIds) {
		var ret []string
		return ret
	}
	return o.MentionIds
}

// GetMentionIdsOk returns a tuple with the MentionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryActionTaskCreate) GetMentionIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.MentionIds) {
		return nil, false
	}
	return o.MentionIds, true
}

// HasMentionIds returns a boolean if a field has been set.
func (o *HistoryActionTaskCreate) HasMentionIds() bool {
	if o != nil && !IsNil(o.MentionIds) {
		return true
	}

	return false
}

// SetMentionIds gets a reference to the given []string and assigns it to the MentionIds field.
func (o *HistoryActionTaskCreate) SetMentionIds(v []string) {
	o.MentionIds = v
}

// GetGroupMentionIds returns the GroupMentionIds field value if set, zero value otherwise.
func (o *HistoryActionTaskCreate) GetGroupMentionIds() []string {
	if o == nil || IsNil(o.GroupMentionIds) {
		var ret []string
		return ret
	}
	return o.GroupMentionIds
}

// GetGroupMentionIdsOk returns a tuple with the GroupMentionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryActionTaskCreate) GetGroupMentionIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupMentionIds) {
		return nil, false
	}
	return o.GroupMentionIds, true
}

// HasGroupMentionIds returns a boolean if a field has been set.
func (o *HistoryActionTaskCreate) HasGroupMentionIds() bool {
	if o != nil && !IsNil(o.GroupMentionIds) {
		return true
	}

	return false
}

// SetGroupMentionIds gets a reference to the given []string and assigns it to the GroupMentionIds field.
func (o *HistoryActionTaskCreate) SetGroupMentionIds(v []string) {
	o.GroupMentionIds = v
}

// GetOwnerIds returns the OwnerIds field value if set, zero value otherwise.
func (o *HistoryActionTaskCreate) GetOwnerIds() []string {
	if o == nil || IsNil(o.OwnerIds) {
		var ret []string
		return ret
	}
	return o.OwnerIds
}

// GetOwnerIdsOk returns a tuple with the OwnerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryActionTaskCreate) GetOwnerIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.OwnerIds) {
		return nil, false
	}
	return o.OwnerIds, true
}

// HasOwnerIds returns a boolean if a field has been set.
func (o *HistoryActionTaskCreate) HasOwnerIds() bool {
	if o != nil && !IsNil(o.OwnerIds) {
		return true
	}

	return false
}

// SetOwnerIds gets a reference to the given []string and assigns it to the OwnerIds field.
func (o *HistoryActionTaskCreate) SetOwnerIds(v []string) {
	o.OwnerIds = v
}

// GetId returns the Id field value
func (o *HistoryActionTaskCreate) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *HistoryActionTaskCreate) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *HistoryActionTaskCreate) SetId(v int64) {
	o.Id = v
}

// GetAction returns the Action field value
func (o *HistoryActionTaskCreate) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *HistoryActionTaskCreate) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *HistoryActionTaskCreate) SetAction(v string) {
	o.Action = v
}

// GetComplete returns the Complete field value
func (o *HistoryActionTaskCreate) GetComplete() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value
// and a boolean to check if the value has been set.
func (o *HistoryActionTaskCreate) GetCompleteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Complete, true
}

// SetComplete sets field value
func (o *HistoryActionTaskCreate) SetComplete(v bool) {
	o.Complete = v
}

// GetDeadline returns the Deadline field value if set, zero value otherwise.
func (o *HistoryActionTaskCreate) GetDeadline() string {
	if o == nil || IsNil(o.Deadline) {
		var ret string
		return ret
	}
	return *o.Deadline
}

// GetDeadlineOk returns a tuple with the Deadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryActionTaskCreate) GetDeadlineOk() (*string, bool) {
	if o == nil || IsNil(o.Deadline) {
		return nil, false
	}
	return o.Deadline, true
}

// HasDeadline returns a boolean if a field has been set.
func (o *HistoryActionTaskCreate) HasDeadline() bool {
	if o != nil && !IsNil(o.Deadline) {
		return true
	}

	return false
}

// SetDeadline gets a reference to the given string and assigns it to the Deadline field.
func (o *HistoryActionTaskCreate) SetDeadline(v string) {
	o.Deadline = &v
}

func (o HistoryActionTaskCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HistoryActionTaskCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["entity_type"] = o.EntityType
	if !IsNil(o.MentionIds) {
		toSerialize["mention_ids"] = o.MentionIds
	}
	if !IsNil(o.GroupMentionIds) {
		toSerialize["group_mention_ids"] = o.GroupMentionIds
	}
	if !IsNil(o.OwnerIds) {
		toSerialize["owner_ids"] = o.OwnerIds
	}
	toSerialize["id"] = o.Id
	toSerialize["action"] = o.Action
	toSerialize["complete"] = o.Complete
	if !IsNil(o.Deadline) {
		toSerialize["deadline"] = o.Deadline
	}
	return toSerialize, nil
}

type NullableHistoryActionTaskCreate struct {
	value *HistoryActionTaskCreate
	isSet bool
}

func (v NullableHistoryActionTaskCreate) Get() *HistoryActionTaskCreate {
	return v.value
}

func (v *NullableHistoryActionTaskCreate) Set(val *HistoryActionTaskCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableHistoryActionTaskCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableHistoryActionTaskCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHistoryActionTaskCreate(val *HistoryActionTaskCreate) *NullableHistoryActionTaskCreate {
	return &NullableHistoryActionTaskCreate{value: val, isSet: true}
}

func (v NullableHistoryActionTaskCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHistoryActionTaskCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


