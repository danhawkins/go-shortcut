/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Group type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Group{}

// Group A Group.
type Group struct {
	// The Shortcut application url for the Group.
	AppUrl string `json:"app_url"`
	// The description of the Group.
	Description string `json:"description"`
	// Whether or not the Group is archived.
	Archived bool `json:"archived"`
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// The hex color to be displayed with the Group (for example, \"#ff0000\").
	Color NullableString `json:"color"`
	// The number of stories assigned to the group which are in a started workflow state.
	NumStoriesStarted int64 `json:"num_stories_started"`
	// The mention name of the Group.
	MentionName string `json:"mention_name"`
	// The name of the Group.
	Name string `json:"name"`
	GlobalId string `json:"global_id"`
	// The color key to be displayed with the Group.
	ColorKey NullableString `json:"color_key"`
	// The total number of stories assigned ot the group.
	NumStories int64 `json:"num_stories"`
	// The number of epics assigned to the group which are in the started workflow state.
	NumEpicsStarted int64 `json:"num_epics_started"`
	// The number of stories assigned to the group which are in a backlog workflow state.
	NumStoriesBacklog int64 `json:"num_stories_backlog"`
	// The id of the Group.
	Id string `json:"id"`
	DisplayIcon Icon `json:"display_icon"`
	// The Member IDs contain within the Group.
	MemberIds []string `json:"member_ids"`
	// The Workflow IDs contained within the Group.
	WorkflowIds []int64 `json:"workflow_ids"`
}

// NewGroup instantiates a new Group object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroup(appUrl string, description string, archived bool, entityType string, color NullableString, numStoriesStarted int64, mentionName string, name string, globalId string, colorKey NullableString, numStories int64, numEpicsStarted int64, numStoriesBacklog int64, id string, displayIcon Icon, memberIds []string, workflowIds []int64) *Group {
	this := Group{}
	this.AppUrl = appUrl
	this.Description = description
	this.Archived = archived
	this.EntityType = entityType
	this.Color = color
	this.NumStoriesStarted = numStoriesStarted
	this.MentionName = mentionName
	this.Name = name
	this.GlobalId = globalId
	this.ColorKey = colorKey
	this.NumStories = numStories
	this.NumEpicsStarted = numEpicsStarted
	this.NumStoriesBacklog = numStoriesBacklog
	this.Id = id
	this.DisplayIcon = displayIcon
	this.MemberIds = memberIds
	this.WorkflowIds = workflowIds
	return &this
}

// NewGroupWithDefaults instantiates a new Group object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupWithDefaults() *Group {
	this := Group{}
	return &this
}

// GetAppUrl returns the AppUrl field value
func (o *Group) GetAppUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppUrl
}

// GetAppUrlOk returns a tuple with the AppUrl field value
// and a boolean to check if the value has been set.
func (o *Group) GetAppUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppUrl, true
}

// SetAppUrl sets field value
func (o *Group) SetAppUrl(v string) {
	o.AppUrl = v
}

// GetDescription returns the Description field value
func (o *Group) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Group) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Group) SetDescription(v string) {
	o.Description = v
}

// GetArchived returns the Archived field value
func (o *Group) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *Group) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *Group) SetArchived(v bool) {
	o.Archived = v
}

// GetEntityType returns the EntityType field value
func (o *Group) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *Group) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *Group) SetEntityType(v string) {
	o.EntityType = v
}

// GetColor returns the Color field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Group) GetColor() string {
	if o == nil || o.Color.Get() == nil {
		var ret string
		return ret
	}

	return *o.Color.Get()
}

// GetColorOk returns a tuple with the Color field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Group) GetColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Color.Get(), o.Color.IsSet()
}

// SetColor sets field value
func (o *Group) SetColor(v string) {
	o.Color.Set(&v)
}

// GetNumStoriesStarted returns the NumStoriesStarted field value
func (o *Group) GetNumStoriesStarted() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumStoriesStarted
}

// GetNumStoriesStartedOk returns a tuple with the NumStoriesStarted field value
// and a boolean to check if the value has been set.
func (o *Group) GetNumStoriesStartedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStoriesStarted, true
}

// SetNumStoriesStarted sets field value
func (o *Group) SetNumStoriesStarted(v int64) {
	o.NumStoriesStarted = v
}

// GetMentionName returns the MentionName field value
func (o *Group) GetMentionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MentionName
}

// GetMentionNameOk returns a tuple with the MentionName field value
// and a boolean to check if the value has been set.
func (o *Group) GetMentionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MentionName, true
}

// SetMentionName sets field value
func (o *Group) SetMentionName(v string) {
	o.MentionName = v
}

// GetName returns the Name field value
func (o *Group) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Group) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Group) SetName(v string) {
	o.Name = v
}

// GetGlobalId returns the GlobalId field value
func (o *Group) GetGlobalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GlobalId
}

// GetGlobalIdOk returns a tuple with the GlobalId field value
// and a boolean to check if the value has been set.
func (o *Group) GetGlobalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalId, true
}

// SetGlobalId sets field value
func (o *Group) SetGlobalId(v string) {
	o.GlobalId = v
}

// GetColorKey returns the ColorKey field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Group) GetColorKey() string {
	if o == nil || o.ColorKey.Get() == nil {
		var ret string
		return ret
	}

	return *o.ColorKey.Get()
}

// GetColorKeyOk returns a tuple with the ColorKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Group) GetColorKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ColorKey.Get(), o.ColorKey.IsSet()
}

// SetColorKey sets field value
func (o *Group) SetColorKey(v string) {
	o.ColorKey.Set(&v)
}

// GetNumStories returns the NumStories field value
func (o *Group) GetNumStories() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumStories
}

// GetNumStoriesOk returns a tuple with the NumStories field value
// and a boolean to check if the value has been set.
func (o *Group) GetNumStoriesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStories, true
}

// SetNumStories sets field value
func (o *Group) SetNumStories(v int64) {
	o.NumStories = v
}

// GetNumEpicsStarted returns the NumEpicsStarted field value
func (o *Group) GetNumEpicsStarted() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumEpicsStarted
}

// GetNumEpicsStartedOk returns a tuple with the NumEpicsStarted field value
// and a boolean to check if the value has been set.
func (o *Group) GetNumEpicsStartedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumEpicsStarted, true
}

// SetNumEpicsStarted sets field value
func (o *Group) SetNumEpicsStarted(v int64) {
	o.NumEpicsStarted = v
}

// GetNumStoriesBacklog returns the NumStoriesBacklog field value
func (o *Group) GetNumStoriesBacklog() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumStoriesBacklog
}

// GetNumStoriesBacklogOk returns a tuple with the NumStoriesBacklog field value
// and a boolean to check if the value has been set.
func (o *Group) GetNumStoriesBacklogOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStoriesBacklog, true
}

// SetNumStoriesBacklog sets field value
func (o *Group) SetNumStoriesBacklog(v int64) {
	o.NumStoriesBacklog = v
}

// GetId returns the Id field value
func (o *Group) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Group) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Group) SetId(v string) {
	o.Id = v
}

// GetDisplayIcon returns the DisplayIcon field value
func (o *Group) GetDisplayIcon() Icon {
	if o == nil {
		var ret Icon
		return ret
	}

	return o.DisplayIcon
}

// GetDisplayIconOk returns a tuple with the DisplayIcon field value
// and a boolean to check if the value has been set.
func (o *Group) GetDisplayIconOk() (*Icon, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayIcon, true
}

// SetDisplayIcon sets field value
func (o *Group) SetDisplayIcon(v Icon) {
	o.DisplayIcon = v
}

// GetMemberIds returns the MemberIds field value
func (o *Group) GetMemberIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MemberIds
}

// GetMemberIdsOk returns a tuple with the MemberIds field value
// and a boolean to check if the value has been set.
func (o *Group) GetMemberIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberIds, true
}

// SetMemberIds sets field value
func (o *Group) SetMemberIds(v []string) {
	o.MemberIds = v
}

// GetWorkflowIds returns the WorkflowIds field value
func (o *Group) GetWorkflowIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.WorkflowIds
}

// GetWorkflowIdsOk returns a tuple with the WorkflowIds field value
// and a boolean to check if the value has been set.
func (o *Group) GetWorkflowIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkflowIds, true
}

// SetWorkflowIds sets field value
func (o *Group) SetWorkflowIds(v []int64) {
	o.WorkflowIds = v
}

func (o Group) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Group) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app_url"] = o.AppUrl
	toSerialize["description"] = o.Description
	toSerialize["archived"] = o.Archived
	toSerialize["entity_type"] = o.EntityType
	toSerialize["color"] = o.Color.Get()
	toSerialize["num_stories_started"] = o.NumStoriesStarted
	toSerialize["mention_name"] = o.MentionName
	toSerialize["name"] = o.Name
	toSerialize["global_id"] = o.GlobalId
	toSerialize["color_key"] = o.ColorKey.Get()
	toSerialize["num_stories"] = o.NumStories
	toSerialize["num_epics_started"] = o.NumEpicsStarted
	toSerialize["num_stories_backlog"] = o.NumStoriesBacklog
	toSerialize["id"] = o.Id
	toSerialize["display_icon"] = o.DisplayIcon
	toSerialize["member_ids"] = o.MemberIds
	toSerialize["workflow_ids"] = o.WorkflowIds
	return toSerialize, nil
}

type NullableGroup struct {
	value *Group
	isSet bool
}

func (v NullableGroup) Get() *Group {
	return v.value
}

func (v *NullableGroup) Set(val *Group) {
	v.value = val
	v.isSet = true
}

func (v NullableGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroup(val *Group) *NullableGroup {
	return &NullableGroup{value: val, isSet: true}
}

func (v NullableGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


