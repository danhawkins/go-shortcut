/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the EntityTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntityTemplate{}

// EntityTemplate An entity template can be used to prefill various fields when creating new stories.
type EntityTemplate struct {
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// The unique identifier for the entity template.
	Id string `json:"id"`
	// The time/date when the entity template was created.
	CreatedAt time.Time `json:"created_at"`
	// The time/date when the entity template was last updated.
	UpdatedAt time.Time `json:"updated_at"`
	// The template's name.
	Name string `json:"name"`
	// The unique ID of the member who created the template.
	AuthorId string `json:"author_id"`
	// The last time that someone created an entity using this template.
	LastUsedAt time.Time `json:"last_used_at"`
	StoryContents StoryContents `json:"story_contents"`
}

// NewEntityTemplate instantiates a new EntityTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityTemplate(entityType string, id string, createdAt time.Time, updatedAt time.Time, name string, authorId string, lastUsedAt time.Time, storyContents StoryContents) *EntityTemplate {
	this := EntityTemplate{}
	this.EntityType = entityType
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Name = name
	this.AuthorId = authorId
	this.LastUsedAt = lastUsedAt
	this.StoryContents = storyContents
	return &this
}

// NewEntityTemplateWithDefaults instantiates a new EntityTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityTemplateWithDefaults() *EntityTemplate {
	this := EntityTemplate{}
	return &this
}

// GetEntityType returns the EntityType field value
func (o *EntityTemplate) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *EntityTemplate) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *EntityTemplate) SetEntityType(v string) {
	o.EntityType = v
}

// GetId returns the Id field value
func (o *EntityTemplate) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EntityTemplate) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EntityTemplate) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *EntityTemplate) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *EntityTemplate) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *EntityTemplate) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *EntityTemplate) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *EntityTemplate) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *EntityTemplate) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetName returns the Name field value
func (o *EntityTemplate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EntityTemplate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EntityTemplate) SetName(v string) {
	o.Name = v
}

// GetAuthorId returns the AuthorId field value
func (o *EntityTemplate) GetAuthorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value
// and a boolean to check if the value has been set.
func (o *EntityTemplate) GetAuthorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthorId, true
}

// SetAuthorId sets field value
func (o *EntityTemplate) SetAuthorId(v string) {
	o.AuthorId = v
}

// GetLastUsedAt returns the LastUsedAt field value
func (o *EntityTemplate) GetLastUsedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUsedAt
}

// GetLastUsedAtOk returns a tuple with the LastUsedAt field value
// and a boolean to check if the value has been set.
func (o *EntityTemplate) GetLastUsedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUsedAt, true
}

// SetLastUsedAt sets field value
func (o *EntityTemplate) SetLastUsedAt(v time.Time) {
	o.LastUsedAt = v
}

// GetStoryContents returns the StoryContents field value
func (o *EntityTemplate) GetStoryContents() StoryContents {
	if o == nil {
		var ret StoryContents
		return ret
	}

	return o.StoryContents
}

// GetStoryContentsOk returns a tuple with the StoryContents field value
// and a boolean to check if the value has been set.
func (o *EntityTemplate) GetStoryContentsOk() (*StoryContents, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoryContents, true
}

// SetStoryContents sets field value
func (o *EntityTemplate) SetStoryContents(v StoryContents) {
	o.StoryContents = v
}

func (o EntityTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntityTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entity_type"] = o.EntityType
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["name"] = o.Name
	toSerialize["author_id"] = o.AuthorId
	toSerialize["last_used_at"] = o.LastUsedAt
	toSerialize["story_contents"] = o.StoryContents
	return toSerialize, nil
}

type NullableEntityTemplate struct {
	value *EntityTemplate
	isSet bool
}

func (v NullableEntityTemplate) Get() *EntityTemplate {
	return v.value
}

func (v *NullableEntityTemplate) Set(val *EntityTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityTemplate(val *EntityTemplate) *NullableEntityTemplate {
	return &NullableEntityTemplate{value: val, isSet: true}
}

func (v NullableEntityTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


