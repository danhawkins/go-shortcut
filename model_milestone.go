/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Milestone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Milestone{}

// Milestone A Milestone is a collection of Epics that represent a release or some other large initiative that you are working on.
type Milestone struct {
	// The Shortcut application url for the Milestone.
	AppUrl string `json:"app_url"`
	// The Milestone's description.
	Description string `json:"description"`
	// A boolean indicating whether the Milestone has been archived or not.
	Archived bool `json:"archived"`
	// A true/false boolean indicating if the Milestone has been started.
	Started bool `json:"started"`
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// A manual override for the time/date the Milestone was completed.
	CompletedAtOverride NullableTime `json:"completed_at_override"`
	// The time/date the Milestone was started.
	StartedAt NullableTime `json:"started_at"`
	// The time/date the Milestone was completed.
	CompletedAt NullableTime `json:"completed_at"`
	// The name of the Milestone.
	Name string `json:"name"`
	GlobalId string `json:"global_id"`
	// A true/false boolean indicating if the Milestone has been completed.
	Completed bool `json:"completed"`
	// The workflow state that the Milestone is in.
	State string `json:"state"`
	// A manual override for the time/date the Milestone was started.
	StartedAtOverride NullableTime `json:"started_at_override"`
	// The time/date the Milestone was updated.
	UpdatedAt time.Time `json:"updated_at"`
	// An array of Categories attached to the Milestone.
	Categories []Category `json:"categories"`
	// The unique ID of the Milestone.
	Id int64 `json:"id"`
	// A number representing the position of the Milestone in relation to every other Milestone within the Workspace.
	Position int64 `json:"position"`
	Stats MilestoneStats `json:"stats"`
	// The time/date the Milestone was created.
	CreatedAt time.Time `json:"created_at"`
}

// NewMilestone instantiates a new Milestone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMilestone(appUrl string, description string, archived bool, started bool, entityType string, completedAtOverride NullableTime, startedAt NullableTime, completedAt NullableTime, name string, globalId string, completed bool, state string, startedAtOverride NullableTime, updatedAt time.Time, categories []Category, id int64, position int64, stats MilestoneStats, createdAt time.Time) *Milestone {
	this := Milestone{}
	this.AppUrl = appUrl
	this.Description = description
	this.Archived = archived
	this.Started = started
	this.EntityType = entityType
	this.CompletedAtOverride = completedAtOverride
	this.StartedAt = startedAt
	this.CompletedAt = completedAt
	this.Name = name
	this.GlobalId = globalId
	this.Completed = completed
	this.State = state
	this.StartedAtOverride = startedAtOverride
	this.UpdatedAt = updatedAt
	this.Categories = categories
	this.Id = id
	this.Position = position
	this.Stats = stats
	this.CreatedAt = createdAt
	return &this
}

// NewMilestoneWithDefaults instantiates a new Milestone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMilestoneWithDefaults() *Milestone {
	this := Milestone{}
	return &this
}

// GetAppUrl returns the AppUrl field value
func (o *Milestone) GetAppUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppUrl
}

// GetAppUrlOk returns a tuple with the AppUrl field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetAppUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppUrl, true
}

// SetAppUrl sets field value
func (o *Milestone) SetAppUrl(v string) {
	o.AppUrl = v
}

// GetDescription returns the Description field value
func (o *Milestone) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Milestone) SetDescription(v string) {
	o.Description = v
}

// GetArchived returns the Archived field value
func (o *Milestone) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *Milestone) SetArchived(v bool) {
	o.Archived = v
}

// GetStarted returns the Started field value
func (o *Milestone) GetStarted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Started
}

// GetStartedOk returns a tuple with the Started field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetStartedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Started, true
}

// SetStarted sets field value
func (o *Milestone) SetStarted(v bool) {
	o.Started = v
}

// GetEntityType returns the EntityType field value
func (o *Milestone) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *Milestone) SetEntityType(v string) {
	o.EntityType = v
}

// GetCompletedAtOverride returns the CompletedAtOverride field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Milestone) GetCompletedAtOverride() time.Time {
	if o == nil || o.CompletedAtOverride.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CompletedAtOverride.Get()
}

// GetCompletedAtOverrideOk returns a tuple with the CompletedAtOverride field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Milestone) GetCompletedAtOverrideOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAtOverride.Get(), o.CompletedAtOverride.IsSet()
}

// SetCompletedAtOverride sets field value
func (o *Milestone) SetCompletedAtOverride(v time.Time) {
	o.CompletedAtOverride.Set(&v)
}

// GetStartedAt returns the StartedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Milestone) GetStartedAt() time.Time {
	if o == nil || o.StartedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.StartedAt.Get()
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Milestone) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAt.Get(), o.StartedAt.IsSet()
}

// SetStartedAt sets field value
func (o *Milestone) SetStartedAt(v time.Time) {
	o.StartedAt.Set(&v)
}

// GetCompletedAt returns the CompletedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Milestone) GetCompletedAt() time.Time {
	if o == nil || o.CompletedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CompletedAt.Get()
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Milestone) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAt.Get(), o.CompletedAt.IsSet()
}

// SetCompletedAt sets field value
func (o *Milestone) SetCompletedAt(v time.Time) {
	o.CompletedAt.Set(&v)
}

// GetName returns the Name field value
func (o *Milestone) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Milestone) SetName(v string) {
	o.Name = v
}

// GetGlobalId returns the GlobalId field value
func (o *Milestone) GetGlobalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GlobalId
}

// GetGlobalIdOk returns a tuple with the GlobalId field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetGlobalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalId, true
}

// SetGlobalId sets field value
func (o *Milestone) SetGlobalId(v string) {
	o.GlobalId = v
}

// GetCompleted returns the Completed field value
func (o *Milestone) GetCompleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetCompletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Completed, true
}

// SetCompleted sets field value
func (o *Milestone) SetCompleted(v bool) {
	o.Completed = v
}

// GetState returns the State field value
func (o *Milestone) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Milestone) SetState(v string) {
	o.State = v
}

// GetStartedAtOverride returns the StartedAtOverride field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Milestone) GetStartedAtOverride() time.Time {
	if o == nil || o.StartedAtOverride.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.StartedAtOverride.Get()
}

// GetStartedAtOverrideOk returns a tuple with the StartedAtOverride field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Milestone) GetStartedAtOverrideOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAtOverride.Get(), o.StartedAtOverride.IsSet()
}

// SetStartedAtOverride sets field value
func (o *Milestone) SetStartedAtOverride(v time.Time) {
	o.StartedAtOverride.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Milestone) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Milestone) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCategories returns the Categories field value
func (o *Milestone) GetCategories() []Category {
	if o == nil {
		var ret []Category
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetCategoriesOk() ([]Category, bool) {
	if o == nil {
		return nil, false
	}
	return o.Categories, true
}

// SetCategories sets field value
func (o *Milestone) SetCategories(v []Category) {
	o.Categories = v
}

// GetId returns the Id field value
func (o *Milestone) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Milestone) SetId(v int64) {
	o.Id = v
}

// GetPosition returns the Position field value
func (o *Milestone) GetPosition() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetPositionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *Milestone) SetPosition(v int64) {
	o.Position = v
}

// GetStats returns the Stats field value
func (o *Milestone) GetStats() MilestoneStats {
	if o == nil {
		var ret MilestoneStats
		return ret
	}

	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetStatsOk() (*MilestoneStats, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stats, true
}

// SetStats sets field value
func (o *Milestone) SetStats(v MilestoneStats) {
	o.Stats = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Milestone) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Milestone) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o Milestone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Milestone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app_url"] = o.AppUrl
	toSerialize["description"] = o.Description
	toSerialize["archived"] = o.Archived
	toSerialize["started"] = o.Started
	toSerialize["entity_type"] = o.EntityType
	toSerialize["completed_at_override"] = o.CompletedAtOverride.Get()
	toSerialize["started_at"] = o.StartedAt.Get()
	toSerialize["completed_at"] = o.CompletedAt.Get()
	toSerialize["name"] = o.Name
	toSerialize["global_id"] = o.GlobalId
	toSerialize["completed"] = o.Completed
	toSerialize["state"] = o.State
	toSerialize["started_at_override"] = o.StartedAtOverride.Get()
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["categories"] = o.Categories
	toSerialize["id"] = o.Id
	toSerialize["position"] = o.Position
	toSerialize["stats"] = o.Stats
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

type NullableMilestone struct {
	value *Milestone
	isSet bool
}

func (v NullableMilestone) Get() *Milestone {
	return v.value
}

func (v *NullableMilestone) Set(val *Milestone) {
	v.value = val
	v.isSet = true
}

func (v NullableMilestone) IsSet() bool {
	return v.isSet
}

func (v *NullableMilestone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMilestone(val *Milestone) *NullableMilestone {
	return &NullableMilestone{value: val, isSet: true}
}

func (v NullableMilestone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMilestone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


