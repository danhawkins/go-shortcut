/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Workflow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Workflow{}

// Workflow Workflow is the array of defined Workflow States. Workflow can be queried using the API but must be updated in the Shortcut UI. 
type Workflow struct {
	// A description of the workflow.
	Description string `json:"description"`
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// An array of IDs of projects within the Workflow.
	ProjectIds []float64 `json:"project_ids"`
	// A map of the states in this Workflow.
	States []WorkflowState `json:"states"`
	// The name of the workflow.
	Name string `json:"name"`
	// The date the Workflow was updated.
	UpdatedAt time.Time `json:"updated_at"`
	// Indicates if an owner is automatically assigned when an unowned story is started.
	AutoAssignOwner bool `json:"auto_assign_owner"`
	// The unique ID of the Workflow.
	Id int64 `json:"id"`
	// The ID of the team the workflow belongs to.
	TeamId int64 `json:"team_id"`
	// The date the Workflow was created.
	CreatedAt time.Time `json:"created_at"`
	// The unique ID of the default state that new Stories are entered into.
	DefaultStateId int64 `json:"default_state_id"`
}

// NewWorkflow instantiates a new Workflow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflow(description string, entityType string, projectIds []float64, states []WorkflowState, name string, updatedAt time.Time, autoAssignOwner bool, id int64, teamId int64, createdAt time.Time, defaultStateId int64) *Workflow {
	this := Workflow{}
	this.Description = description
	this.EntityType = entityType
	this.ProjectIds = projectIds
	this.States = states
	this.Name = name
	this.UpdatedAt = updatedAt
	this.AutoAssignOwner = autoAssignOwner
	this.Id = id
	this.TeamId = teamId
	this.CreatedAt = createdAt
	this.DefaultStateId = defaultStateId
	return &this
}

// NewWorkflowWithDefaults instantiates a new Workflow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowWithDefaults() *Workflow {
	this := Workflow{}
	return &this
}

// GetDescription returns the Description field value
func (o *Workflow) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Workflow) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Workflow) SetDescription(v string) {
	o.Description = v
}

// GetEntityType returns the EntityType field value
func (o *Workflow) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *Workflow) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *Workflow) SetEntityType(v string) {
	o.EntityType = v
}

// GetProjectIds returns the ProjectIds field value
func (o *Workflow) GetProjectIds() []float64 {
	if o == nil {
		var ret []float64
		return ret
	}

	return o.ProjectIds
}

// GetProjectIdsOk returns a tuple with the ProjectIds field value
// and a boolean to check if the value has been set.
func (o *Workflow) GetProjectIdsOk() ([]float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectIds, true
}

// SetProjectIds sets field value
func (o *Workflow) SetProjectIds(v []float64) {
	o.ProjectIds = v
}

// GetStates returns the States field value
func (o *Workflow) GetStates() []WorkflowState {
	if o == nil {
		var ret []WorkflowState
		return ret
	}

	return o.States
}

// GetStatesOk returns a tuple with the States field value
// and a boolean to check if the value has been set.
func (o *Workflow) GetStatesOk() ([]WorkflowState, bool) {
	if o == nil {
		return nil, false
	}
	return o.States, true
}

// SetStates sets field value
func (o *Workflow) SetStates(v []WorkflowState) {
	o.States = v
}

// GetName returns the Name field value
func (o *Workflow) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Workflow) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Workflow) SetName(v string) {
	o.Name = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Workflow) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Workflow) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Workflow) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetAutoAssignOwner returns the AutoAssignOwner field value
func (o *Workflow) GetAutoAssignOwner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoAssignOwner
}

// GetAutoAssignOwnerOk returns a tuple with the AutoAssignOwner field value
// and a boolean to check if the value has been set.
func (o *Workflow) GetAutoAssignOwnerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoAssignOwner, true
}

// SetAutoAssignOwner sets field value
func (o *Workflow) SetAutoAssignOwner(v bool) {
	o.AutoAssignOwner = v
}

// GetId returns the Id field value
func (o *Workflow) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Workflow) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Workflow) SetId(v int64) {
	o.Id = v
}

// GetTeamId returns the TeamId field value
func (o *Workflow) GetTeamId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value
// and a boolean to check if the value has been set.
func (o *Workflow) GetTeamIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamId, true
}

// SetTeamId sets field value
func (o *Workflow) SetTeamId(v int64) {
	o.TeamId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Workflow) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Workflow) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Workflow) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDefaultStateId returns the DefaultStateId field value
func (o *Workflow) GetDefaultStateId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DefaultStateId
}

// GetDefaultStateIdOk returns a tuple with the DefaultStateId field value
// and a boolean to check if the value has been set.
func (o *Workflow) GetDefaultStateIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultStateId, true
}

// SetDefaultStateId sets field value
func (o *Workflow) SetDefaultStateId(v int64) {
	o.DefaultStateId = v
}

func (o Workflow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Workflow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["entity_type"] = o.EntityType
	toSerialize["project_ids"] = o.ProjectIds
	toSerialize["states"] = o.States
	toSerialize["name"] = o.Name
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["auto_assign_owner"] = o.AutoAssignOwner
	toSerialize["id"] = o.Id
	toSerialize["team_id"] = o.TeamId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["default_state_id"] = o.DefaultStateId
	return toSerialize, nil
}

type NullableWorkflow struct {
	value *Workflow
	isSet bool
}

func (v NullableWorkflow) Get() *Workflow {
	return v.value
}

func (v *NullableWorkflow) Set(val *Workflow) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflow) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflow(val *Workflow) *NullableWorkflow {
	return &NullableWorkflow{value: val, isSet: true}
}

func (v NullableWorkflow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


