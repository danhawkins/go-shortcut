/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateLabelParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateLabelParams{}

// CreateLabelParams Request parameters for creating a Label on a Shortcut Story.
type CreateLabelParams struct {
	// The name of the new Label.
	Name string `json:"name"`
	// The description of the new Label.
	Description *string `json:"description,omitempty"`
	// The hex color to be displayed with the Label (for example, \"#ff0000\").
	Color *string `json:"color,omitempty"`
	// This field can be set to another unique ID. In the case that the Label has been imported from another tool, the ID in the other tool can be indicated here.
	ExternalId *string `json:"external_id,omitempty"`
}

// NewCreateLabelParams instantiates a new CreateLabelParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLabelParams(name string) *CreateLabelParams {
	this := CreateLabelParams{}
	this.Name = name
	return &this
}

// NewCreateLabelParamsWithDefaults instantiates a new CreateLabelParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLabelParamsWithDefaults() *CreateLabelParams {
	this := CreateLabelParams{}
	return &this
}

// GetName returns the Name field value
func (o *CreateLabelParams) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateLabelParams) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateLabelParams) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateLabelParams) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLabelParams) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateLabelParams) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateLabelParams) SetDescription(v string) {
	o.Description = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *CreateLabelParams) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLabelParams) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *CreateLabelParams) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *CreateLabelParams) SetColor(v string) {
	o.Color = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *CreateLabelParams) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLabelParams) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *CreateLabelParams) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *CreateLabelParams) SetExternalId(v string) {
	o.ExternalId = &v
}

func (o CreateLabelParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateLabelParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	return toSerialize, nil
}

type NullableCreateLabelParams struct {
	value *CreateLabelParams
	isSet bool
}

func (v NullableCreateLabelParams) Get() *CreateLabelParams {
	return v.value
}

func (v *NullableCreateLabelParams) Set(val *CreateLabelParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLabelParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLabelParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLabelParams(val *CreateLabelParams) *NullableCreateLabelParams {
	return &NullableCreateLabelParams{value: val, isSet: true}
}

func (v NullableCreateLabelParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLabelParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


