/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BasicWorkspaceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BasicWorkspaceInfo{}

// BasicWorkspaceInfo struct for BasicWorkspaceInfo
type BasicWorkspaceInfo struct {
	UrlSlug string `json:"url_slug"`
	EstimateScale []int64 `json:"estimate_scale"`
}

// NewBasicWorkspaceInfo instantiates a new BasicWorkspaceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBasicWorkspaceInfo(urlSlug string, estimateScale []int64) *BasicWorkspaceInfo {
	this := BasicWorkspaceInfo{}
	this.UrlSlug = urlSlug
	this.EstimateScale = estimateScale
	return &this
}

// NewBasicWorkspaceInfoWithDefaults instantiates a new BasicWorkspaceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBasicWorkspaceInfoWithDefaults() *BasicWorkspaceInfo {
	this := BasicWorkspaceInfo{}
	return &this
}

// GetUrlSlug returns the UrlSlug field value
func (o *BasicWorkspaceInfo) GetUrlSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlSlug
}

// GetUrlSlugOk returns a tuple with the UrlSlug field value
// and a boolean to check if the value has been set.
func (o *BasicWorkspaceInfo) GetUrlSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlSlug, true
}

// SetUrlSlug sets field value
func (o *BasicWorkspaceInfo) SetUrlSlug(v string) {
	o.UrlSlug = v
}

// GetEstimateScale returns the EstimateScale field value
func (o *BasicWorkspaceInfo) GetEstimateScale() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.EstimateScale
}

// GetEstimateScaleOk returns a tuple with the EstimateScale field value
// and a boolean to check if the value has been set.
func (o *BasicWorkspaceInfo) GetEstimateScaleOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.EstimateScale, true
}

// SetEstimateScale sets field value
func (o *BasicWorkspaceInfo) SetEstimateScale(v []int64) {
	o.EstimateScale = v
}

func (o BasicWorkspaceInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BasicWorkspaceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url_slug"] = o.UrlSlug
	toSerialize["estimate_scale"] = o.EstimateScale
	return toSerialize, nil
}

type NullableBasicWorkspaceInfo struct {
	value *BasicWorkspaceInfo
	isSet bool
}

func (v NullableBasicWorkspaceInfo) Get() *BasicWorkspaceInfo {
	return v.value
}

func (v *NullableBasicWorkspaceInfo) Set(val *BasicWorkspaceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBasicWorkspaceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBasicWorkspaceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBasicWorkspaceInfo(val *BasicWorkspaceInfo) *NullableBasicWorkspaceInfo {
	return &NullableBasicWorkspaceInfo{value: val, isSet: true}
}

func (v NullableBasicWorkspaceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBasicWorkspaceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


