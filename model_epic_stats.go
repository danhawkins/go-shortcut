/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the EpicStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EpicStats{}

// EpicStats A group of calculated values for this Epic.
type EpicStats struct {
	// The total number of completed points in this Epic.
	NumPointsDone int64 `json:"num_points_done"`
	// The total number of documents associated with this Epic.
	NumRelatedDocuments int64 `json:"num_related_documents"`
	// The average cycle time (in seconds) of completed stories in this Epic.
	AverageCycleTime *int64 `json:"average_cycle_time,omitempty"`
	// The total number of unstarted Stories in this Epic.
	NumStoriesUnstarted int64 `json:"num_stories_unstarted"`
	// The total number of Stories in this Epic.
	NumStoriesTotal int64 `json:"num_stories_total"`
	// The date of the last update of a Story in this Epic.
	LastStoryUpdate NullableTime `json:"last_story_update"`
	// The total number of started points in this Epic.
	NumPointsStarted int64 `json:"num_points_started"`
	// The total number of unstarted points in this Epic.
	NumPointsUnstarted int64 `json:"num_points_unstarted"`
	// The total number of started Stories in this Epic.
	NumStoriesStarted int64 `json:"num_stories_started"`
	// The total number of Stories with no point estimate.
	NumStoriesUnestimated int64 `json:"num_stories_unestimated"`
	// The total number of backlog Stories in this Epic.
	NumStoriesBacklog int64 `json:"num_stories_backlog"`
	// The average lead time (in seconds) of completed stories in this Epic.
	AverageLeadTime *int64 `json:"average_lead_time,omitempty"`
	// The total number of backlog points in this Epic.
	NumPointsBacklog int64 `json:"num_points_backlog"`
	// The total number of points in this Epic.
	NumPoints int64 `json:"num_points"`
	// The total number of done Stories in this Epic.
	NumStoriesDone int64 `json:"num_stories_done"`
}

// NewEpicStats instantiates a new EpicStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEpicStats(numPointsDone int64, numRelatedDocuments int64, numStoriesUnstarted int64, numStoriesTotal int64, lastStoryUpdate NullableTime, numPointsStarted int64, numPointsUnstarted int64, numStoriesStarted int64, numStoriesUnestimated int64, numStoriesBacklog int64, numPointsBacklog int64, numPoints int64, numStoriesDone int64) *EpicStats {
	this := EpicStats{}
	this.NumPointsDone = numPointsDone
	this.NumRelatedDocuments = numRelatedDocuments
	this.NumStoriesUnstarted = numStoriesUnstarted
	this.NumStoriesTotal = numStoriesTotal
	this.LastStoryUpdate = lastStoryUpdate
	this.NumPointsStarted = numPointsStarted
	this.NumPointsUnstarted = numPointsUnstarted
	this.NumStoriesStarted = numStoriesStarted
	this.NumStoriesUnestimated = numStoriesUnestimated
	this.NumStoriesBacklog = numStoriesBacklog
	this.NumPointsBacklog = numPointsBacklog
	this.NumPoints = numPoints
	this.NumStoriesDone = numStoriesDone
	return &this
}

// NewEpicStatsWithDefaults instantiates a new EpicStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEpicStatsWithDefaults() *EpicStats {
	this := EpicStats{}
	return &this
}

// GetNumPointsDone returns the NumPointsDone field value
func (o *EpicStats) GetNumPointsDone() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumPointsDone
}

// GetNumPointsDoneOk returns a tuple with the NumPointsDone field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumPointsDoneOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumPointsDone, true
}

// SetNumPointsDone sets field value
func (o *EpicStats) SetNumPointsDone(v int64) {
	o.NumPointsDone = v
}

// GetNumRelatedDocuments returns the NumRelatedDocuments field value
func (o *EpicStats) GetNumRelatedDocuments() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumRelatedDocuments
}

// GetNumRelatedDocumentsOk returns a tuple with the NumRelatedDocuments field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumRelatedDocumentsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumRelatedDocuments, true
}

// SetNumRelatedDocuments sets field value
func (o *EpicStats) SetNumRelatedDocuments(v int64) {
	o.NumRelatedDocuments = v
}

// GetAverageCycleTime returns the AverageCycleTime field value if set, zero value otherwise.
func (o *EpicStats) GetAverageCycleTime() int64 {
	if o == nil || IsNil(o.AverageCycleTime) {
		var ret int64
		return ret
	}
	return *o.AverageCycleTime
}

// GetAverageCycleTimeOk returns a tuple with the AverageCycleTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpicStats) GetAverageCycleTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.AverageCycleTime) {
		return nil, false
	}
	return o.AverageCycleTime, true
}

// HasAverageCycleTime returns a boolean if a field has been set.
func (o *EpicStats) HasAverageCycleTime() bool {
	if o != nil && !IsNil(o.AverageCycleTime) {
		return true
	}

	return false
}

// SetAverageCycleTime gets a reference to the given int64 and assigns it to the AverageCycleTime field.
func (o *EpicStats) SetAverageCycleTime(v int64) {
	o.AverageCycleTime = &v
}

// GetNumStoriesUnstarted returns the NumStoriesUnstarted field value
func (o *EpicStats) GetNumStoriesUnstarted() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumStoriesUnstarted
}

// GetNumStoriesUnstartedOk returns a tuple with the NumStoriesUnstarted field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumStoriesUnstartedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStoriesUnstarted, true
}

// SetNumStoriesUnstarted sets field value
func (o *EpicStats) SetNumStoriesUnstarted(v int64) {
	o.NumStoriesUnstarted = v
}

// GetNumStoriesTotal returns the NumStoriesTotal field value
func (o *EpicStats) GetNumStoriesTotal() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumStoriesTotal
}

// GetNumStoriesTotalOk returns a tuple with the NumStoriesTotal field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumStoriesTotalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStoriesTotal, true
}

// SetNumStoriesTotal sets field value
func (o *EpicStats) SetNumStoriesTotal(v int64) {
	o.NumStoriesTotal = v
}

// GetLastStoryUpdate returns the LastStoryUpdate field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *EpicStats) GetLastStoryUpdate() time.Time {
	if o == nil || o.LastStoryUpdate.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.LastStoryUpdate.Get()
}

// GetLastStoryUpdateOk returns a tuple with the LastStoryUpdate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpicStats) GetLastStoryUpdateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastStoryUpdate.Get(), o.LastStoryUpdate.IsSet()
}

// SetLastStoryUpdate sets field value
func (o *EpicStats) SetLastStoryUpdate(v time.Time) {
	o.LastStoryUpdate.Set(&v)
}

// GetNumPointsStarted returns the NumPointsStarted field value
func (o *EpicStats) GetNumPointsStarted() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumPointsStarted
}

// GetNumPointsStartedOk returns a tuple with the NumPointsStarted field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumPointsStartedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumPointsStarted, true
}

// SetNumPointsStarted sets field value
func (o *EpicStats) SetNumPointsStarted(v int64) {
	o.NumPointsStarted = v
}

// GetNumPointsUnstarted returns the NumPointsUnstarted field value
func (o *EpicStats) GetNumPointsUnstarted() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumPointsUnstarted
}

// GetNumPointsUnstartedOk returns a tuple with the NumPointsUnstarted field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumPointsUnstartedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumPointsUnstarted, true
}

// SetNumPointsUnstarted sets field value
func (o *EpicStats) SetNumPointsUnstarted(v int64) {
	o.NumPointsUnstarted = v
}

// GetNumStoriesStarted returns the NumStoriesStarted field value
func (o *EpicStats) GetNumStoriesStarted() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumStoriesStarted
}

// GetNumStoriesStartedOk returns a tuple with the NumStoriesStarted field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumStoriesStartedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStoriesStarted, true
}

// SetNumStoriesStarted sets field value
func (o *EpicStats) SetNumStoriesStarted(v int64) {
	o.NumStoriesStarted = v
}

// GetNumStoriesUnestimated returns the NumStoriesUnestimated field value
func (o *EpicStats) GetNumStoriesUnestimated() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumStoriesUnestimated
}

// GetNumStoriesUnestimatedOk returns a tuple with the NumStoriesUnestimated field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumStoriesUnestimatedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStoriesUnestimated, true
}

// SetNumStoriesUnestimated sets field value
func (o *EpicStats) SetNumStoriesUnestimated(v int64) {
	o.NumStoriesUnestimated = v
}

// GetNumStoriesBacklog returns the NumStoriesBacklog field value
func (o *EpicStats) GetNumStoriesBacklog() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumStoriesBacklog
}

// GetNumStoriesBacklogOk returns a tuple with the NumStoriesBacklog field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumStoriesBacklogOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStoriesBacklog, true
}

// SetNumStoriesBacklog sets field value
func (o *EpicStats) SetNumStoriesBacklog(v int64) {
	o.NumStoriesBacklog = v
}

// GetAverageLeadTime returns the AverageLeadTime field value if set, zero value otherwise.
func (o *EpicStats) GetAverageLeadTime() int64 {
	if o == nil || IsNil(o.AverageLeadTime) {
		var ret int64
		return ret
	}
	return *o.AverageLeadTime
}

// GetAverageLeadTimeOk returns a tuple with the AverageLeadTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpicStats) GetAverageLeadTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.AverageLeadTime) {
		return nil, false
	}
	return o.AverageLeadTime, true
}

// HasAverageLeadTime returns a boolean if a field has been set.
func (o *EpicStats) HasAverageLeadTime() bool {
	if o != nil && !IsNil(o.AverageLeadTime) {
		return true
	}

	return false
}

// SetAverageLeadTime gets a reference to the given int64 and assigns it to the AverageLeadTime field.
func (o *EpicStats) SetAverageLeadTime(v int64) {
	o.AverageLeadTime = &v
}

// GetNumPointsBacklog returns the NumPointsBacklog field value
func (o *EpicStats) GetNumPointsBacklog() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumPointsBacklog
}

// GetNumPointsBacklogOk returns a tuple with the NumPointsBacklog field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumPointsBacklogOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumPointsBacklog, true
}

// SetNumPointsBacklog sets field value
func (o *EpicStats) SetNumPointsBacklog(v int64) {
	o.NumPointsBacklog = v
}

// GetNumPoints returns the NumPoints field value
func (o *EpicStats) GetNumPoints() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumPoints
}

// GetNumPointsOk returns a tuple with the NumPoints field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumPointsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumPoints, true
}

// SetNumPoints sets field value
func (o *EpicStats) SetNumPoints(v int64) {
	o.NumPoints = v
}

// GetNumStoriesDone returns the NumStoriesDone field value
func (o *EpicStats) GetNumStoriesDone() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumStoriesDone
}

// GetNumStoriesDoneOk returns a tuple with the NumStoriesDone field value
// and a boolean to check if the value has been set.
func (o *EpicStats) GetNumStoriesDoneOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStoriesDone, true
}

// SetNumStoriesDone sets field value
func (o *EpicStats) SetNumStoriesDone(v int64) {
	o.NumStoriesDone = v
}

func (o EpicStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EpicStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["num_points_done"] = o.NumPointsDone
	toSerialize["num_related_documents"] = o.NumRelatedDocuments
	if !IsNil(o.AverageCycleTime) {
		toSerialize["average_cycle_time"] = o.AverageCycleTime
	}
	toSerialize["num_stories_unstarted"] = o.NumStoriesUnstarted
	toSerialize["num_stories_total"] = o.NumStoriesTotal
	toSerialize["last_story_update"] = o.LastStoryUpdate.Get()
	toSerialize["num_points_started"] = o.NumPointsStarted
	toSerialize["num_points_unstarted"] = o.NumPointsUnstarted
	toSerialize["num_stories_started"] = o.NumStoriesStarted
	toSerialize["num_stories_unestimated"] = o.NumStoriesUnestimated
	toSerialize["num_stories_backlog"] = o.NumStoriesBacklog
	if !IsNil(o.AverageLeadTime) {
		toSerialize["average_lead_time"] = o.AverageLeadTime
	}
	toSerialize["num_points_backlog"] = o.NumPointsBacklog
	toSerialize["num_points"] = o.NumPoints
	toSerialize["num_stories_done"] = o.NumStoriesDone
	return toSerialize, nil
}

type NullableEpicStats struct {
	value *EpicStats
	isSet bool
}

func (v NullableEpicStats) Get() *EpicStats {
	return v.value
}

func (v *NullableEpicStats) Set(val *EpicStats) {
	v.value = val
	v.isSet = true
}

func (v NullableEpicStats) IsSet() bool {
	return v.isSet
}

func (v *NullableEpicStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEpicStats(val *EpicStats) *NullableEpicStats {
	return &NullableEpicStats{value: val, isSet: true}
}

func (v NullableEpicStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEpicStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


