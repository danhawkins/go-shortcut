/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Story type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Story{}

// Story Stories are the standard unit of work in Shortcut and represent individual features, bugs, and chores.
type Story struct {
	// The Shortcut application url for the Story.
	AppUrl string `json:"app_url"`
	// The description of the story.
	Description string `json:"description"`
	// True if the story has been archived or not.
	Archived bool `json:"archived"`
	// A true/false boolean indicating if the Story has been started.
	Started bool `json:"started"`
	// An array of story links attached to the Story.
	StoryLinks []TypedStoryLink `json:"story_links"`
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// An array of labels attached to the story.
	Labels []LabelSlim `json:"labels"`
	// Deprecated: use member_mention_ids.
	MentionIds []string `json:"mention_ids"`
	SyncedItem *SyncedItem `json:"synced_item,omitempty"`
	// An array of Member IDs that have been mentioned in the Story description.
	MemberMentionIds []string `json:"member_mention_ids"`
	// The type of story (feature, bug, chore).
	StoryType string `json:"story_type"`
	// An array of CustomField value assertions for the story.
	CustomFields []StoryCustomField `json:"custom_fields,omitempty"`
	// An array of linked files attached to the story.
	LinkedFiles []LinkedFile `json:"linked_files"`
	// The ID of the workflow the story belongs to.
	WorkflowId int64 `json:"workflow_id"`
	// A manual override for the time/date the Story was completed.
	CompletedAtOverride NullableTime `json:"completed_at_override"`
	// The time/date the Story was started.
	StartedAt NullableTime `json:"started_at"`
	// The time/date the Story was completed.
	CompletedAt NullableTime `json:"completed_at"`
	// The name of the story.
	Name string `json:"name"`
	GlobalId string `json:"global_id"`
	// A true/false boolean indicating if the Story has been completed.
	Completed bool `json:"completed"`
	// An array of comments attached to the story.
	Comments []StoryComment `json:"comments"`
	// A true/false boolean indicating if the Story is currently a blocker of another story.
	Blocker bool `json:"blocker"`
	// An array of Git branches attached to the story.
	Branches []Branch `json:"branches"`
	// The ID of the epic the story belongs to.
	EpicId NullableInt64 `json:"epic_id"`
	// The IDs of any unresolved blocker comments on the Story.
	UnresolvedBlockerComments []int64 `json:"unresolved_blocker_comments,omitempty"`
	// The ID of the story template used to create this story, or null if not created using a template.
	StoryTemplateId NullableString `json:"story_template_id"`
	// An array of external links (strings) associated with a Story
	ExternalLinks []string `json:"external_links"`
	// The IDs of the iteration the story belongs to.
	PreviousIterationIds []int64 `json:"previous_iteration_ids"`
	// The ID of the Member that requested the story.
	RequestedById string `json:"requested_by_id"`
	// The ID of the iteration the story belongs to.
	IterationId NullableInt64 `json:"iteration_id"`
	// An array of tasks connected to the story.
	Tasks []Task `json:"tasks"`
	// An array of label ids attached to the story.
	LabelIds []int64 `json:"label_ids"`
	// A manual override for the time/date the Story was started.
	StartedAtOverride NullableTime `json:"started_at_override"`
	// The ID of the group associated with the story.
	GroupId NullableString `json:"group_id"`
	// The ID of the workflow state the story is currently in.
	WorkflowStateId int64 `json:"workflow_state_id"`
	// The time/date the Story was updated.
	UpdatedAt NullableTime `json:"updated_at"`
	// An array of Pull/Merge Requests attached to the story.
	PullRequests []PullRequest `json:"pull_requests"`
	// An array of Group IDs that have been mentioned in the Story description.
	GroupMentionIds []string `json:"group_mention_ids"`
	// An array of UUIDs for any Members listed as Followers.
	FollowerIds []string `json:"follower_ids"`
	// An array of UUIDs of the owners of this story.
	OwnerIds []string `json:"owner_ids"`
	// This field can be set to another unique ID. In the case that the Story has been imported from another tool, the ID in the other tool can be indicated here.
	ExternalId NullableString `json:"external_id"`
	// The unique ID of the Story.
	Id int64 `json:"id"`
	// The lead time (in seconds) of this story when complete.
	LeadTime *int64 `json:"lead_time,omitempty"`
	// The numeric point estimate of the story. Can also be null, which means unestimated.
	Estimate NullableInt64 `json:"estimate"`
	// An array of commits attached to the story.
	Commits []Commit `json:"commits"`
	// An array of files attached to the story.
	Files []UploadedFile `json:"files"`
	// A number representing the position of the story in relation to every other story in the current project.
	Position int64 `json:"position"`
	// A true/false boolean indicating if the Story is currently blocked.
	Blocked bool `json:"blocked"`
	// The ID of the project the story belongs to.
	ProjectId NullableInt64 `json:"project_id"`
	// The due date of the story.
	Deadline NullableTime `json:"deadline"`
	Stats StoryStats `json:"stats"`
	// The cycle time (in seconds) of this story when complete.
	CycleTime *int64 `json:"cycle_time,omitempty"`
	// The time/date the Story was created.
	CreatedAt time.Time `json:"created_at"`
	// The time/date the Story was last changed workflow-state.
	MovedAt NullableTime `json:"moved_at"`
}

// NewStory instantiates a new Story object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStory(appUrl string, description string, archived bool, started bool, storyLinks []TypedStoryLink, entityType string, labels []LabelSlim, mentionIds []string, memberMentionIds []string, storyType string, linkedFiles []LinkedFile, workflowId int64, completedAtOverride NullableTime, startedAt NullableTime, completedAt NullableTime, name string, globalId string, completed bool, comments []StoryComment, blocker bool, branches []Branch, epicId NullableInt64, storyTemplateId NullableString, externalLinks []string, previousIterationIds []int64, requestedById string, iterationId NullableInt64, tasks []Task, labelIds []int64, startedAtOverride NullableTime, groupId NullableString, workflowStateId int64, updatedAt NullableTime, pullRequests []PullRequest, groupMentionIds []string, followerIds []string, ownerIds []string, externalId NullableString, id int64, estimate NullableInt64, commits []Commit, files []UploadedFile, position int64, blocked bool, projectId NullableInt64, deadline NullableTime, stats StoryStats, createdAt time.Time, movedAt NullableTime) *Story {
	this := Story{}
	this.AppUrl = appUrl
	this.Description = description
	this.Archived = archived
	this.Started = started
	this.StoryLinks = storyLinks
	this.EntityType = entityType
	this.Labels = labels
	this.MentionIds = mentionIds
	this.MemberMentionIds = memberMentionIds
	this.StoryType = storyType
	this.LinkedFiles = linkedFiles
	this.WorkflowId = workflowId
	this.CompletedAtOverride = completedAtOverride
	this.StartedAt = startedAt
	this.CompletedAt = completedAt
	this.Name = name
	this.GlobalId = globalId
	this.Completed = completed
	this.Comments = comments
	this.Blocker = blocker
	this.Branches = branches
	this.EpicId = epicId
	this.StoryTemplateId = storyTemplateId
	this.ExternalLinks = externalLinks
	this.PreviousIterationIds = previousIterationIds
	this.RequestedById = requestedById
	this.IterationId = iterationId
	this.Tasks = tasks
	this.LabelIds = labelIds
	this.StartedAtOverride = startedAtOverride
	this.GroupId = groupId
	this.WorkflowStateId = workflowStateId
	this.UpdatedAt = updatedAt
	this.PullRequests = pullRequests
	this.GroupMentionIds = groupMentionIds
	this.FollowerIds = followerIds
	this.OwnerIds = ownerIds
	this.ExternalId = externalId
	this.Id = id
	this.Estimate = estimate
	this.Commits = commits
	this.Files = files
	this.Position = position
	this.Blocked = blocked
	this.ProjectId = projectId
	this.Deadline = deadline
	this.Stats = stats
	this.CreatedAt = createdAt
	this.MovedAt = movedAt
	return &this
}

// NewStoryWithDefaults instantiates a new Story object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoryWithDefaults() *Story {
	this := Story{}
	return &this
}

// GetAppUrl returns the AppUrl field value
func (o *Story) GetAppUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppUrl
}

// GetAppUrlOk returns a tuple with the AppUrl field value
// and a boolean to check if the value has been set.
func (o *Story) GetAppUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppUrl, true
}

// SetAppUrl sets field value
func (o *Story) SetAppUrl(v string) {
	o.AppUrl = v
}

// GetDescription returns the Description field value
func (o *Story) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Story) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Story) SetDescription(v string) {
	o.Description = v
}

// GetArchived returns the Archived field value
func (o *Story) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *Story) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *Story) SetArchived(v bool) {
	o.Archived = v
}

// GetStarted returns the Started field value
func (o *Story) GetStarted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Started
}

// GetStartedOk returns a tuple with the Started field value
// and a boolean to check if the value has been set.
func (o *Story) GetStartedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Started, true
}

// SetStarted sets field value
func (o *Story) SetStarted(v bool) {
	o.Started = v
}

// GetStoryLinks returns the StoryLinks field value
func (o *Story) GetStoryLinks() []TypedStoryLink {
	if o == nil {
		var ret []TypedStoryLink
		return ret
	}

	return o.StoryLinks
}

// GetStoryLinksOk returns a tuple with the StoryLinks field value
// and a boolean to check if the value has been set.
func (o *Story) GetStoryLinksOk() ([]TypedStoryLink, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoryLinks, true
}

// SetStoryLinks sets field value
func (o *Story) SetStoryLinks(v []TypedStoryLink) {
	o.StoryLinks = v
}

// GetEntityType returns the EntityType field value
func (o *Story) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *Story) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *Story) SetEntityType(v string) {
	o.EntityType = v
}

// GetLabels returns the Labels field value
func (o *Story) GetLabels() []LabelSlim {
	if o == nil {
		var ret []LabelSlim
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *Story) GetLabelsOk() ([]LabelSlim, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *Story) SetLabels(v []LabelSlim) {
	o.Labels = v
}

// GetMentionIds returns the MentionIds field value
func (o *Story) GetMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MentionIds
}

// GetMentionIdsOk returns a tuple with the MentionIds field value
// and a boolean to check if the value has been set.
func (o *Story) GetMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MentionIds, true
}

// SetMentionIds sets field value
func (o *Story) SetMentionIds(v []string) {
	o.MentionIds = v
}

// GetSyncedItem returns the SyncedItem field value if set, zero value otherwise.
func (o *Story) GetSyncedItem() SyncedItem {
	if o == nil || IsNil(o.SyncedItem) {
		var ret SyncedItem
		return ret
	}
	return *o.SyncedItem
}

// GetSyncedItemOk returns a tuple with the SyncedItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetSyncedItemOk() (*SyncedItem, bool) {
	if o == nil || IsNil(o.SyncedItem) {
		return nil, false
	}
	return o.SyncedItem, true
}

// HasSyncedItem returns a boolean if a field has been set.
func (o *Story) HasSyncedItem() bool {
	if o != nil && !IsNil(o.SyncedItem) {
		return true
	}

	return false
}

// SetSyncedItem gets a reference to the given SyncedItem and assigns it to the SyncedItem field.
func (o *Story) SetSyncedItem(v SyncedItem) {
	o.SyncedItem = &v
}

// GetMemberMentionIds returns the MemberMentionIds field value
func (o *Story) GetMemberMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MemberMentionIds
}

// GetMemberMentionIdsOk returns a tuple with the MemberMentionIds field value
// and a boolean to check if the value has been set.
func (o *Story) GetMemberMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberMentionIds, true
}

// SetMemberMentionIds sets field value
func (o *Story) SetMemberMentionIds(v []string) {
	o.MemberMentionIds = v
}

// GetStoryType returns the StoryType field value
func (o *Story) GetStoryType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StoryType
}

// GetStoryTypeOk returns a tuple with the StoryType field value
// and a boolean to check if the value has been set.
func (o *Story) GetStoryTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoryType, true
}

// SetStoryType sets field value
func (o *Story) SetStoryType(v string) {
	o.StoryType = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Story) GetCustomFields() []StoryCustomField {
	if o == nil || IsNil(o.CustomFields) {
		var ret []StoryCustomField
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetCustomFieldsOk() ([]StoryCustomField, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Story) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []StoryCustomField and assigns it to the CustomFields field.
func (o *Story) SetCustomFields(v []StoryCustomField) {
	o.CustomFields = v
}

// GetLinkedFiles returns the LinkedFiles field value
func (o *Story) GetLinkedFiles() []LinkedFile {
	if o == nil {
		var ret []LinkedFile
		return ret
	}

	return o.LinkedFiles
}

// GetLinkedFilesOk returns a tuple with the LinkedFiles field value
// and a boolean to check if the value has been set.
func (o *Story) GetLinkedFilesOk() ([]LinkedFile, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedFiles, true
}

// SetLinkedFiles sets field value
func (o *Story) SetLinkedFiles(v []LinkedFile) {
	o.LinkedFiles = v
}

// GetWorkflowId returns the WorkflowId field value
func (o *Story) GetWorkflowId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value
// and a boolean to check if the value has been set.
func (o *Story) GetWorkflowIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowId, true
}

// SetWorkflowId sets field value
func (o *Story) SetWorkflowId(v int64) {
	o.WorkflowId = v
}

// GetCompletedAtOverride returns the CompletedAtOverride field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Story) GetCompletedAtOverride() time.Time {
	if o == nil || o.CompletedAtOverride.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CompletedAtOverride.Get()
}

// GetCompletedAtOverrideOk returns a tuple with the CompletedAtOverride field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetCompletedAtOverrideOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAtOverride.Get(), o.CompletedAtOverride.IsSet()
}

// SetCompletedAtOverride sets field value
func (o *Story) SetCompletedAtOverride(v time.Time) {
	o.CompletedAtOverride.Set(&v)
}

// GetStartedAt returns the StartedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Story) GetStartedAt() time.Time {
	if o == nil || o.StartedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.StartedAt.Get()
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAt.Get(), o.StartedAt.IsSet()
}

// SetStartedAt sets field value
func (o *Story) SetStartedAt(v time.Time) {
	o.StartedAt.Set(&v)
}

// GetCompletedAt returns the CompletedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Story) GetCompletedAt() time.Time {
	if o == nil || o.CompletedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CompletedAt.Get()
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAt.Get(), o.CompletedAt.IsSet()
}

// SetCompletedAt sets field value
func (o *Story) SetCompletedAt(v time.Time) {
	o.CompletedAt.Set(&v)
}

// GetName returns the Name field value
func (o *Story) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Story) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Story) SetName(v string) {
	o.Name = v
}

// GetGlobalId returns the GlobalId field value
func (o *Story) GetGlobalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GlobalId
}

// GetGlobalIdOk returns a tuple with the GlobalId field value
// and a boolean to check if the value has been set.
func (o *Story) GetGlobalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalId, true
}

// SetGlobalId sets field value
func (o *Story) SetGlobalId(v string) {
	o.GlobalId = v
}

// GetCompleted returns the Completed field value
func (o *Story) GetCompleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value
// and a boolean to check if the value has been set.
func (o *Story) GetCompletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Completed, true
}

// SetCompleted sets field value
func (o *Story) SetCompleted(v bool) {
	o.Completed = v
}

// GetComments returns the Comments field value
func (o *Story) GetComments() []StoryComment {
	if o == nil {
		var ret []StoryComment
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *Story) GetCommentsOk() ([]StoryComment, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comments, true
}

// SetComments sets field value
func (o *Story) SetComments(v []StoryComment) {
	o.Comments = v
}

// GetBlocker returns the Blocker field value
func (o *Story) GetBlocker() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Blocker
}

// GetBlockerOk returns a tuple with the Blocker field value
// and a boolean to check if the value has been set.
func (o *Story) GetBlockerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Blocker, true
}

// SetBlocker sets field value
func (o *Story) SetBlocker(v bool) {
	o.Blocker = v
}

// GetBranches returns the Branches field value
func (o *Story) GetBranches() []Branch {
	if o == nil {
		var ret []Branch
		return ret
	}

	return o.Branches
}

// GetBranchesOk returns a tuple with the Branches field value
// and a boolean to check if the value has been set.
func (o *Story) GetBranchesOk() ([]Branch, bool) {
	if o == nil {
		return nil, false
	}
	return o.Branches, true
}

// SetBranches sets field value
func (o *Story) SetBranches(v []Branch) {
	o.Branches = v
}

// GetEpicId returns the EpicId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *Story) GetEpicId() int64 {
	if o == nil || o.EpicId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.EpicId.Get()
}

// GetEpicIdOk returns a tuple with the EpicId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetEpicIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.EpicId.Get(), o.EpicId.IsSet()
}

// SetEpicId sets field value
func (o *Story) SetEpicId(v int64) {
	o.EpicId.Set(&v)
}

// GetUnresolvedBlockerComments returns the UnresolvedBlockerComments field value if set, zero value otherwise.
func (o *Story) GetUnresolvedBlockerComments() []int64 {
	if o == nil || IsNil(o.UnresolvedBlockerComments) {
		var ret []int64
		return ret
	}
	return o.UnresolvedBlockerComments
}

// GetUnresolvedBlockerCommentsOk returns a tuple with the UnresolvedBlockerComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetUnresolvedBlockerCommentsOk() ([]int64, bool) {
	if o == nil || IsNil(o.UnresolvedBlockerComments) {
		return nil, false
	}
	return o.UnresolvedBlockerComments, true
}

// HasUnresolvedBlockerComments returns a boolean if a field has been set.
func (o *Story) HasUnresolvedBlockerComments() bool {
	if o != nil && !IsNil(o.UnresolvedBlockerComments) {
		return true
	}

	return false
}

// SetUnresolvedBlockerComments gets a reference to the given []int64 and assigns it to the UnresolvedBlockerComments field.
func (o *Story) SetUnresolvedBlockerComments(v []int64) {
	o.UnresolvedBlockerComments = v
}

// GetStoryTemplateId returns the StoryTemplateId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Story) GetStoryTemplateId() string {
	if o == nil || o.StoryTemplateId.Get() == nil {
		var ret string
		return ret
	}

	return *o.StoryTemplateId.Get()
}

// GetStoryTemplateIdOk returns a tuple with the StoryTemplateId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetStoryTemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoryTemplateId.Get(), o.StoryTemplateId.IsSet()
}

// SetStoryTemplateId sets field value
func (o *Story) SetStoryTemplateId(v string) {
	o.StoryTemplateId.Set(&v)
}

// GetExternalLinks returns the ExternalLinks field value
func (o *Story) GetExternalLinks() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ExternalLinks
}

// GetExternalLinksOk returns a tuple with the ExternalLinks field value
// and a boolean to check if the value has been set.
func (o *Story) GetExternalLinksOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalLinks, true
}

// SetExternalLinks sets field value
func (o *Story) SetExternalLinks(v []string) {
	o.ExternalLinks = v
}

// GetPreviousIterationIds returns the PreviousIterationIds field value
func (o *Story) GetPreviousIterationIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.PreviousIterationIds
}

// GetPreviousIterationIdsOk returns a tuple with the PreviousIterationIds field value
// and a boolean to check if the value has been set.
func (o *Story) GetPreviousIterationIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreviousIterationIds, true
}

// SetPreviousIterationIds sets field value
func (o *Story) SetPreviousIterationIds(v []int64) {
	o.PreviousIterationIds = v
}

// GetRequestedById returns the RequestedById field value
func (o *Story) GetRequestedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestedById
}

// GetRequestedByIdOk returns a tuple with the RequestedById field value
// and a boolean to check if the value has been set.
func (o *Story) GetRequestedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestedById, true
}

// SetRequestedById sets field value
func (o *Story) SetRequestedById(v string) {
	o.RequestedById = v
}

// GetIterationId returns the IterationId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *Story) GetIterationId() int64 {
	if o == nil || o.IterationId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.IterationId.Get()
}

// GetIterationIdOk returns a tuple with the IterationId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetIterationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.IterationId.Get(), o.IterationId.IsSet()
}

// SetIterationId sets field value
func (o *Story) SetIterationId(v int64) {
	o.IterationId.Set(&v)
}

// GetTasks returns the Tasks field value
func (o *Story) GetTasks() []Task {
	if o == nil {
		var ret []Task
		return ret
	}

	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value
// and a boolean to check if the value has been set.
func (o *Story) GetTasksOk() ([]Task, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tasks, true
}

// SetTasks sets field value
func (o *Story) SetTasks(v []Task) {
	o.Tasks = v
}

// GetLabelIds returns the LabelIds field value
func (o *Story) GetLabelIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value
// and a boolean to check if the value has been set.
func (o *Story) GetLabelIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LabelIds, true
}

// SetLabelIds sets field value
func (o *Story) SetLabelIds(v []int64) {
	o.LabelIds = v
}

// GetStartedAtOverride returns the StartedAtOverride field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Story) GetStartedAtOverride() time.Time {
	if o == nil || o.StartedAtOverride.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.StartedAtOverride.Get()
}

// GetStartedAtOverrideOk returns a tuple with the StartedAtOverride field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetStartedAtOverrideOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAtOverride.Get(), o.StartedAtOverride.IsSet()
}

// SetStartedAtOverride sets field value
func (o *Story) SetStartedAtOverride(v time.Time) {
	o.StartedAtOverride.Set(&v)
}

// GetGroupId returns the GroupId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Story) GetGroupId() string {
	if o == nil || o.GroupId.Get() == nil {
		var ret string
		return ret
	}

	return *o.GroupId.Get()
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupId.Get(), o.GroupId.IsSet()
}

// SetGroupId sets field value
func (o *Story) SetGroupId(v string) {
	o.GroupId.Set(&v)
}

// GetWorkflowStateId returns the WorkflowStateId field value
func (o *Story) GetWorkflowStateId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.WorkflowStateId
}

// GetWorkflowStateIdOk returns a tuple with the WorkflowStateId field value
// and a boolean to check if the value has been set.
func (o *Story) GetWorkflowStateIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowStateId, true
}

// SetWorkflowStateId sets field value
func (o *Story) SetWorkflowStateId(v int64) {
	o.WorkflowStateId = v
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Story) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *Story) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// GetPullRequests returns the PullRequests field value
func (o *Story) GetPullRequests() []PullRequest {
	if o == nil {
		var ret []PullRequest
		return ret
	}

	return o.PullRequests
}

// GetPullRequestsOk returns a tuple with the PullRequests field value
// and a boolean to check if the value has been set.
func (o *Story) GetPullRequestsOk() ([]PullRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.PullRequests, true
}

// SetPullRequests sets field value
func (o *Story) SetPullRequests(v []PullRequest) {
	o.PullRequests = v
}

// GetGroupMentionIds returns the GroupMentionIds field value
func (o *Story) GetGroupMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.GroupMentionIds
}

// GetGroupMentionIdsOk returns a tuple with the GroupMentionIds field value
// and a boolean to check if the value has been set.
func (o *Story) GetGroupMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupMentionIds, true
}

// SetGroupMentionIds sets field value
func (o *Story) SetGroupMentionIds(v []string) {
	o.GroupMentionIds = v
}

// GetFollowerIds returns the FollowerIds field value
func (o *Story) GetFollowerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.FollowerIds
}

// GetFollowerIdsOk returns a tuple with the FollowerIds field value
// and a boolean to check if the value has been set.
func (o *Story) GetFollowerIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FollowerIds, true
}

// SetFollowerIds sets field value
func (o *Story) SetFollowerIds(v []string) {
	o.FollowerIds = v
}

// GetOwnerIds returns the OwnerIds field value
func (o *Story) GetOwnerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OwnerIds
}

// GetOwnerIdsOk returns a tuple with the OwnerIds field value
// and a boolean to check if the value has been set.
func (o *Story) GetOwnerIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OwnerIds, true
}

// SetOwnerIds sets field value
func (o *Story) SetOwnerIds(v []string) {
	o.OwnerIds = v
}

// GetExternalId returns the ExternalId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Story) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// SetExternalId sets field value
func (o *Story) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}

// GetId returns the Id field value
func (o *Story) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Story) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Story) SetId(v int64) {
	o.Id = v
}

// GetLeadTime returns the LeadTime field value if set, zero value otherwise.
func (o *Story) GetLeadTime() int64 {
	if o == nil || IsNil(o.LeadTime) {
		var ret int64
		return ret
	}
	return *o.LeadTime
}

// GetLeadTimeOk returns a tuple with the LeadTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetLeadTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LeadTime) {
		return nil, false
	}
	return o.LeadTime, true
}

// HasLeadTime returns a boolean if a field has been set.
func (o *Story) HasLeadTime() bool {
	if o != nil && !IsNil(o.LeadTime) {
		return true
	}

	return false
}

// SetLeadTime gets a reference to the given int64 and assigns it to the LeadTime field.
func (o *Story) SetLeadTime(v int64) {
	o.LeadTime = &v
}

// GetEstimate returns the Estimate field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *Story) GetEstimate() int64 {
	if o == nil || o.Estimate.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Estimate.Get()
}

// GetEstimateOk returns a tuple with the Estimate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetEstimateOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Estimate.Get(), o.Estimate.IsSet()
}

// SetEstimate sets field value
func (o *Story) SetEstimate(v int64) {
	o.Estimate.Set(&v)
}

// GetCommits returns the Commits field value
func (o *Story) GetCommits() []Commit {
	if o == nil {
		var ret []Commit
		return ret
	}

	return o.Commits
}

// GetCommitsOk returns a tuple with the Commits field value
// and a boolean to check if the value has been set.
func (o *Story) GetCommitsOk() ([]Commit, bool) {
	if o == nil {
		return nil, false
	}
	return o.Commits, true
}

// SetCommits sets field value
func (o *Story) SetCommits(v []Commit) {
	o.Commits = v
}

// GetFiles returns the Files field value
func (o *Story) GetFiles() []UploadedFile {
	if o == nil {
		var ret []UploadedFile
		return ret
	}

	return o.Files
}

// GetFilesOk returns a tuple with the Files field value
// and a boolean to check if the value has been set.
func (o *Story) GetFilesOk() ([]UploadedFile, bool) {
	if o == nil {
		return nil, false
	}
	return o.Files, true
}

// SetFiles sets field value
func (o *Story) SetFiles(v []UploadedFile) {
	o.Files = v
}

// GetPosition returns the Position field value
func (o *Story) GetPosition() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *Story) GetPositionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *Story) SetPosition(v int64) {
	o.Position = v
}

// GetBlocked returns the Blocked field value
func (o *Story) GetBlocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Blocked
}

// GetBlockedOk returns a tuple with the Blocked field value
// and a boolean to check if the value has been set.
func (o *Story) GetBlockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Blocked, true
}

// SetBlocked sets field value
func (o *Story) SetBlocked(v bool) {
	o.Blocked = v
}

// GetProjectId returns the ProjectId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *Story) GetProjectId() int64 {
	if o == nil || o.ProjectId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetProjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// SetProjectId sets field value
func (o *Story) SetProjectId(v int64) {
	o.ProjectId.Set(&v)
}

// GetDeadline returns the Deadline field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Story) GetDeadline() time.Time {
	if o == nil || o.Deadline.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.Deadline.Get()
}

// GetDeadlineOk returns a tuple with the Deadline field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetDeadlineOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Deadline.Get(), o.Deadline.IsSet()
}

// SetDeadline sets field value
func (o *Story) SetDeadline(v time.Time) {
	o.Deadline.Set(&v)
}

// GetStats returns the Stats field value
func (o *Story) GetStats() StoryStats {
	if o == nil {
		var ret StoryStats
		return ret
	}

	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value
// and a boolean to check if the value has been set.
func (o *Story) GetStatsOk() (*StoryStats, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stats, true
}

// SetStats sets field value
func (o *Story) SetStats(v StoryStats) {
	o.Stats = v
}

// GetCycleTime returns the CycleTime field value if set, zero value otherwise.
func (o *Story) GetCycleTime() int64 {
	if o == nil || IsNil(o.CycleTime) {
		var ret int64
		return ret
	}
	return *o.CycleTime
}

// GetCycleTimeOk returns a tuple with the CycleTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetCycleTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CycleTime) {
		return nil, false
	}
	return o.CycleTime, true
}

// HasCycleTime returns a boolean if a field has been set.
func (o *Story) HasCycleTime() bool {
	if o != nil && !IsNil(o.CycleTime) {
		return true
	}

	return false
}

// SetCycleTime gets a reference to the given int64 and assigns it to the CycleTime field.
func (o *Story) SetCycleTime(v int64) {
	o.CycleTime = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Story) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Story) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Story) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetMovedAt returns the MovedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Story) GetMovedAt() time.Time {
	if o == nil || o.MovedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.MovedAt.Get()
}

// GetMovedAtOk returns a tuple with the MovedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Story) GetMovedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.MovedAt.Get(), o.MovedAt.IsSet()
}

// SetMovedAt sets field value
func (o *Story) SetMovedAt(v time.Time) {
	o.MovedAt.Set(&v)
}

func (o Story) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Story) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app_url"] = o.AppUrl
	toSerialize["description"] = o.Description
	toSerialize["archived"] = o.Archived
	toSerialize["started"] = o.Started
	toSerialize["story_links"] = o.StoryLinks
	toSerialize["entity_type"] = o.EntityType
	toSerialize["labels"] = o.Labels
	toSerialize["mention_ids"] = o.MentionIds
	if !IsNil(o.SyncedItem) {
		toSerialize["synced_item"] = o.SyncedItem
	}
	toSerialize["member_mention_ids"] = o.MemberMentionIds
	toSerialize["story_type"] = o.StoryType
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	toSerialize["linked_files"] = o.LinkedFiles
	toSerialize["workflow_id"] = o.WorkflowId
	toSerialize["completed_at_override"] = o.CompletedAtOverride.Get()
	toSerialize["started_at"] = o.StartedAt.Get()
	toSerialize["completed_at"] = o.CompletedAt.Get()
	toSerialize["name"] = o.Name
	toSerialize["global_id"] = o.GlobalId
	toSerialize["completed"] = o.Completed
	toSerialize["comments"] = o.Comments
	toSerialize["blocker"] = o.Blocker
	toSerialize["branches"] = o.Branches
	toSerialize["epic_id"] = o.EpicId.Get()
	if !IsNil(o.UnresolvedBlockerComments) {
		toSerialize["unresolved_blocker_comments"] = o.UnresolvedBlockerComments
	}
	toSerialize["story_template_id"] = o.StoryTemplateId.Get()
	toSerialize["external_links"] = o.ExternalLinks
	toSerialize["previous_iteration_ids"] = o.PreviousIterationIds
	toSerialize["requested_by_id"] = o.RequestedById
	toSerialize["iteration_id"] = o.IterationId.Get()
	toSerialize["tasks"] = o.Tasks
	toSerialize["label_ids"] = o.LabelIds
	toSerialize["started_at_override"] = o.StartedAtOverride.Get()
	toSerialize["group_id"] = o.GroupId.Get()
	toSerialize["workflow_state_id"] = o.WorkflowStateId
	toSerialize["updated_at"] = o.UpdatedAt.Get()
	toSerialize["pull_requests"] = o.PullRequests
	toSerialize["group_mention_ids"] = o.GroupMentionIds
	toSerialize["follower_ids"] = o.FollowerIds
	toSerialize["owner_ids"] = o.OwnerIds
	toSerialize["external_id"] = o.ExternalId.Get()
	toSerialize["id"] = o.Id
	if !IsNil(o.LeadTime) {
		toSerialize["lead_time"] = o.LeadTime
	}
	toSerialize["estimate"] = o.Estimate.Get()
	toSerialize["commits"] = o.Commits
	toSerialize["files"] = o.Files
	toSerialize["position"] = o.Position
	toSerialize["blocked"] = o.Blocked
	toSerialize["project_id"] = o.ProjectId.Get()
	toSerialize["deadline"] = o.Deadline.Get()
	toSerialize["stats"] = o.Stats
	if !IsNil(o.CycleTime) {
		toSerialize["cycle_time"] = o.CycleTime
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["moved_at"] = o.MovedAt.Get()
	return toSerialize, nil
}

type NullableStory struct {
	value *Story
	isSet bool
}

func (v NullableStory) Get() *Story {
	return v.value
}

func (v *NullableStory) Set(val *Story) {
	v.value = val
	v.isSet = true
}

func (v NullableStory) IsSet() bool {
	return v.isSet
}

func (v *NullableStory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStory(val *Story) *NullableStory {
	return &NullableStory{value: val, isSet: true}
}

func (v NullableStory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


