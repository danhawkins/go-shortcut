/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the LinkedFile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkedFile{}

// LinkedFile Linked files are stored on a third-party website and linked to one or more Stories. Shortcut currently supports linking files from Google Drive, Dropbox, Box, and by URL.
type LinkedFile struct {
	// The description of the file.
	Description NullableString `json:"description"`
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// The IDs of the stories this file is attached to.
	StoryIds []int64 `json:"story_ids"`
	// Deprecated: use member_mention_ids.
	MentionIds []string `json:"mention_ids"`
	// The members that are mentioned in the description of the file.
	MemberMentionIds []string `json:"member_mention_ids"`
	// The name of the linked file.
	Name string `json:"name"`
	// The URL of the file thumbnail, if the integration provided it.
	ThumbnailUrl NullableString `json:"thumbnail_url"`
	// The integration type (e.g. google, dropbox, box).
	Type string `json:"type"`
	// The filesize, if the integration provided it.
	Size NullableInt64 `json:"size"`
	// The UUID of the member that uploaded the file.
	UploaderId string `json:"uploader_id"`
	// The content type of the image (e.g. txt/plain).
	ContentType NullableString `json:"content_type"`
	// The time/date the LinkedFile was updated.
	UpdatedAt time.Time `json:"updated_at"`
	// The groups that are mentioned in the description of the file.
	GroupMentionIds []string `json:"group_mention_ids"`
	// The unique identifier for the file.
	Id int64 `json:"id"`
	// The URL of the file.
	Url string `json:"url"`
	// The time/date the LinkedFile was created.
	CreatedAt time.Time `json:"created_at"`
}

// NewLinkedFile instantiates a new LinkedFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkedFile(description NullableString, entityType string, storyIds []int64, mentionIds []string, memberMentionIds []string, name string, thumbnailUrl NullableString, type_ string, size NullableInt64, uploaderId string, contentType NullableString, updatedAt time.Time, groupMentionIds []string, id int64, url string, createdAt time.Time) *LinkedFile {
	this := LinkedFile{}
	this.Description = description
	this.EntityType = entityType
	this.StoryIds = storyIds
	this.MentionIds = mentionIds
	this.MemberMentionIds = memberMentionIds
	this.Name = name
	this.ThumbnailUrl = thumbnailUrl
	this.Type = type_
	this.Size = size
	this.UploaderId = uploaderId
	this.ContentType = contentType
	this.UpdatedAt = updatedAt
	this.GroupMentionIds = groupMentionIds
	this.Id = id
	this.Url = url
	this.CreatedAt = createdAt
	return &this
}

// NewLinkedFileWithDefaults instantiates a new LinkedFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkedFileWithDefaults() *LinkedFile {
	this := LinkedFile{}
	return &this
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LinkedFile) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkedFile) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *LinkedFile) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetEntityType returns the EntityType field value
func (o *LinkedFile) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *LinkedFile) SetEntityType(v string) {
	o.EntityType = v
}

// GetStoryIds returns the StoryIds field value
func (o *LinkedFile) GetStoryIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.StoryIds
}

// GetStoryIdsOk returns a tuple with the StoryIds field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetStoryIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoryIds, true
}

// SetStoryIds sets field value
func (o *LinkedFile) SetStoryIds(v []int64) {
	o.StoryIds = v
}

// GetMentionIds returns the MentionIds field value
func (o *LinkedFile) GetMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MentionIds
}

// GetMentionIdsOk returns a tuple with the MentionIds field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MentionIds, true
}

// SetMentionIds sets field value
func (o *LinkedFile) SetMentionIds(v []string) {
	o.MentionIds = v
}

// GetMemberMentionIds returns the MemberMentionIds field value
func (o *LinkedFile) GetMemberMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MemberMentionIds
}

// GetMemberMentionIdsOk returns a tuple with the MemberMentionIds field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetMemberMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberMentionIds, true
}

// SetMemberMentionIds sets field value
func (o *LinkedFile) SetMemberMentionIds(v []string) {
	o.MemberMentionIds = v
}

// GetName returns the Name field value
func (o *LinkedFile) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LinkedFile) SetName(v string) {
	o.Name = v
}

// GetThumbnailUrl returns the ThumbnailUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LinkedFile) GetThumbnailUrl() string {
	if o == nil || o.ThumbnailUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.ThumbnailUrl.Get()
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkedFile) GetThumbnailUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThumbnailUrl.Get(), o.ThumbnailUrl.IsSet()
}

// SetThumbnailUrl sets field value
func (o *LinkedFile) SetThumbnailUrl(v string) {
	o.ThumbnailUrl.Set(&v)
}

// GetType returns the Type field value
func (o *LinkedFile) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *LinkedFile) SetType(v string) {
	o.Type = v
}

// GetSize returns the Size field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *LinkedFile) GetSize() int64 {
	if o == nil || o.Size.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkedFile) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// SetSize sets field value
func (o *LinkedFile) SetSize(v int64) {
	o.Size.Set(&v)
}

// GetUploaderId returns the UploaderId field value
func (o *LinkedFile) GetUploaderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploaderId
}

// GetUploaderIdOk returns a tuple with the UploaderId field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetUploaderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploaderId, true
}

// SetUploaderId sets field value
func (o *LinkedFile) SetUploaderId(v string) {
	o.UploaderId = v
}

// GetContentType returns the ContentType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LinkedFile) GetContentType() string {
	if o == nil || o.ContentType.Get() == nil {
		var ret string
		return ret
	}

	return *o.ContentType.Get()
}

// GetContentTypeOk returns a tuple with the ContentType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkedFile) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentType.Get(), o.ContentType.IsSet()
}

// SetContentType sets field value
func (o *LinkedFile) SetContentType(v string) {
	o.ContentType.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *LinkedFile) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *LinkedFile) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetGroupMentionIds returns the GroupMentionIds field value
func (o *LinkedFile) GetGroupMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.GroupMentionIds
}

// GetGroupMentionIdsOk returns a tuple with the GroupMentionIds field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetGroupMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupMentionIds, true
}

// SetGroupMentionIds sets field value
func (o *LinkedFile) SetGroupMentionIds(v []string) {
	o.GroupMentionIds = v
}

// GetId returns the Id field value
func (o *LinkedFile) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LinkedFile) SetId(v int64) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *LinkedFile) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *LinkedFile) SetUrl(v string) {
	o.Url = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *LinkedFile) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *LinkedFile) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *LinkedFile) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o LinkedFile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkedFile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description.Get()
	toSerialize["entity_type"] = o.EntityType
	toSerialize["story_ids"] = o.StoryIds
	toSerialize["mention_ids"] = o.MentionIds
	toSerialize["member_mention_ids"] = o.MemberMentionIds
	toSerialize["name"] = o.Name
	toSerialize["thumbnail_url"] = o.ThumbnailUrl.Get()
	toSerialize["type"] = o.Type
	toSerialize["size"] = o.Size.Get()
	toSerialize["uploader_id"] = o.UploaderId
	toSerialize["content_type"] = o.ContentType.Get()
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["group_mention_ids"] = o.GroupMentionIds
	toSerialize["id"] = o.Id
	toSerialize["url"] = o.Url
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

type NullableLinkedFile struct {
	value *LinkedFile
	isSet bool
}

func (v NullableLinkedFile) Get() *LinkedFile {
	return v.value
}

func (v *NullableLinkedFile) Set(val *LinkedFile) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkedFile) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkedFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkedFile(val *LinkedFile) *NullableLinkedFile {
	return &NullableLinkedFile{value: val, isSet: true}
}

func (v NullableLinkedFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkedFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


