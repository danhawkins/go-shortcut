/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the WorkflowState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowState{}

// WorkflowState Workflow State is any of the at least 3 columns. Workflow States correspond to one of 3 types: Unstarted, Started, or Done.
type WorkflowState struct {
	// The description of what sort of Stories belong in that Workflow state.
	Description string `json:"description"`
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// The hex color for this Workflow State.
	Color *string `json:"color,omitempty"`
	// The verb that triggers a move to that Workflow State when making VCS commits.
	Verb NullableString `json:"verb"`
	// The Workflow State's name.
	Name string `json:"name"`
	GlobalId string `json:"global_id"`
	// The number of Stories currently in that Workflow State.
	NumStories int64 `json:"num_stories"`
	// The type of Workflow State (Unstarted, Started, or Finished)
	Type string `json:"type"`
	// When the Workflow State was last updated.
	UpdatedAt time.Time `json:"updated_at"`
	// The unique ID of the Workflow State.
	Id int64 `json:"id"`
	// The number of Story Templates associated with that Workflow State.
	NumStoryTemplates int64 `json:"num_story_templates"`
	// The position that the Workflow State is in, starting with 0 at the left.
	Position int64 `json:"position"`
	// The time/date the Workflow State was created.
	CreatedAt time.Time `json:"created_at"`
}

// NewWorkflowState instantiates a new WorkflowState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowState(description string, entityType string, verb NullableString, name string, globalId string, numStories int64, type_ string, updatedAt time.Time, id int64, numStoryTemplates int64, position int64, createdAt time.Time) *WorkflowState {
	this := WorkflowState{}
	this.Description = description
	this.EntityType = entityType
	this.Verb = verb
	this.Name = name
	this.GlobalId = globalId
	this.NumStories = numStories
	this.Type = type_
	this.UpdatedAt = updatedAt
	this.Id = id
	this.NumStoryTemplates = numStoryTemplates
	this.Position = position
	this.CreatedAt = createdAt
	return &this
}

// NewWorkflowStateWithDefaults instantiates a new WorkflowState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowStateWithDefaults() *WorkflowState {
	this := WorkflowState{}
	return &this
}

// GetDescription returns the Description field value
func (o *WorkflowState) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *WorkflowState) SetDescription(v string) {
	o.Description = v
}

// GetEntityType returns the EntityType field value
func (o *WorkflowState) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *WorkflowState) SetEntityType(v string) {
	o.EntityType = v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *WorkflowState) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *WorkflowState) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *WorkflowState) SetColor(v string) {
	o.Color = &v
}

// GetVerb returns the Verb field value
// If the value is explicit nil, the zero value for string will be returned
func (o *WorkflowState) GetVerb() string {
	if o == nil || o.Verb.Get() == nil {
		var ret string
		return ret
	}

	return *o.Verb.Get()
}

// GetVerbOk returns a tuple with the Verb field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowState) GetVerbOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Verb.Get(), o.Verb.IsSet()
}

// SetVerb sets field value
func (o *WorkflowState) SetVerb(v string) {
	o.Verb.Set(&v)
}

// GetName returns the Name field value
func (o *WorkflowState) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkflowState) SetName(v string) {
	o.Name = v
}

// GetGlobalId returns the GlobalId field value
func (o *WorkflowState) GetGlobalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GlobalId
}

// GetGlobalIdOk returns a tuple with the GlobalId field value
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetGlobalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalId, true
}

// SetGlobalId sets field value
func (o *WorkflowState) SetGlobalId(v string) {
	o.GlobalId = v
}

// GetNumStories returns the NumStories field value
func (o *WorkflowState) GetNumStories() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumStories
}

// GetNumStoriesOk returns a tuple with the NumStories field value
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetNumStoriesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStories, true
}

// SetNumStories sets field value
func (o *WorkflowState) SetNumStories(v int64) {
	o.NumStories = v
}

// GetType returns the Type field value
func (o *WorkflowState) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WorkflowState) SetType(v string) {
	o.Type = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *WorkflowState) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *WorkflowState) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetId returns the Id field value
func (o *WorkflowState) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkflowState) SetId(v int64) {
	o.Id = v
}

// GetNumStoryTemplates returns the NumStoryTemplates field value
func (o *WorkflowState) GetNumStoryTemplates() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumStoryTemplates
}

// GetNumStoryTemplatesOk returns a tuple with the NumStoryTemplates field value
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetNumStoryTemplatesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStoryTemplates, true
}

// SetNumStoryTemplates sets field value
func (o *WorkflowState) SetNumStoryTemplates(v int64) {
	o.NumStoryTemplates = v
}

// GetPosition returns the Position field value
func (o *WorkflowState) GetPosition() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetPositionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *WorkflowState) SetPosition(v int64) {
	o.Position = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *WorkflowState) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WorkflowState) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WorkflowState) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o WorkflowState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["entity_type"] = o.EntityType
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	toSerialize["verb"] = o.Verb.Get()
	toSerialize["name"] = o.Name
	toSerialize["global_id"] = o.GlobalId
	toSerialize["num_stories"] = o.NumStories
	toSerialize["type"] = o.Type
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["id"] = o.Id
	toSerialize["num_story_templates"] = o.NumStoryTemplates
	toSerialize["position"] = o.Position
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

type NullableWorkflowState struct {
	value *WorkflowState
	isSet bool
}

func (v NullableWorkflowState) Get() *WorkflowState {
	return v.value
}

func (v *NullableWorkflowState) Set(val *WorkflowState) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowState) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowState(val *WorkflowState) *NullableWorkflowState {
	return &NullableWorkflowState{value: val, isSet: true}
}

func (v NullableWorkflowState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


