/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateIteration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIteration{}

// CreateIteration struct for CreateIteration
type CreateIteration struct {
	// An array of UUIDs for any Members you want to add as Followers.
	FollowerIds []string `json:"follower_ids,omitempty"`
	// An array of UUIDs for any Groups you want to add as Followers. Currently, only one Group association is presented in our web UI.
	GroupIds []string `json:"group_ids,omitempty"`
	// An array of Labels attached to the Iteration.
	Labels []CreateLabelParams `json:"labels,omitempty"`
	// The description of the Iteration.
	Description *string `json:"description,omitempty"`
	// The name of this Iteration.
	Name string `json:"name"`
	// The date this Iteration begins, e.g. 2019-07-01.
	StartDate string `json:"start_date"`
	// The date this Iteration ends, e.g. 2019-07-01.
	EndDate string `json:"end_date"`
}

// NewCreateIteration instantiates a new CreateIteration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIteration(name string, startDate string, endDate string) *CreateIteration {
	this := CreateIteration{}
	this.Name = name
	this.StartDate = startDate
	this.EndDate = endDate
	return &this
}

// NewCreateIterationWithDefaults instantiates a new CreateIteration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIterationWithDefaults() *CreateIteration {
	this := CreateIteration{}
	return &this
}

// GetFollowerIds returns the FollowerIds field value if set, zero value otherwise.
func (o *CreateIteration) GetFollowerIds() []string {
	if o == nil || IsNil(o.FollowerIds) {
		var ret []string
		return ret
	}
	return o.FollowerIds
}

// GetFollowerIdsOk returns a tuple with the FollowerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIteration) GetFollowerIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.FollowerIds) {
		return nil, false
	}
	return o.FollowerIds, true
}

// HasFollowerIds returns a boolean if a field has been set.
func (o *CreateIteration) HasFollowerIds() bool {
	if o != nil && !IsNil(o.FollowerIds) {
		return true
	}

	return false
}

// SetFollowerIds gets a reference to the given []string and assigns it to the FollowerIds field.
func (o *CreateIteration) SetFollowerIds(v []string) {
	o.FollowerIds = v
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise.
func (o *CreateIteration) GetGroupIds() []string {
	if o == nil || IsNil(o.GroupIds) {
		var ret []string
		return ret
	}
	return o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIteration) GetGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupIds) {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *CreateIteration) HasGroupIds() bool {
	if o != nil && !IsNil(o.GroupIds) {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given []string and assigns it to the GroupIds field.
func (o *CreateIteration) SetGroupIds(v []string) {
	o.GroupIds = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CreateIteration) GetLabels() []CreateLabelParams {
	if o == nil || IsNil(o.Labels) {
		var ret []CreateLabelParams
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIteration) GetLabelsOk() ([]CreateLabelParams, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CreateIteration) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []CreateLabelParams and assigns it to the Labels field.
func (o *CreateIteration) SetLabels(v []CreateLabelParams) {
	o.Labels = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateIteration) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIteration) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateIteration) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateIteration) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *CreateIteration) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateIteration) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateIteration) SetName(v string) {
	o.Name = v
}

// GetStartDate returns the StartDate field value
func (o *CreateIteration) GetStartDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *CreateIteration) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *CreateIteration) SetStartDate(v string) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *CreateIteration) GetEndDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *CreateIteration) GetEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *CreateIteration) SetEndDate(v string) {
	o.EndDate = v
}

func (o CreateIteration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIteration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FollowerIds) {
		toSerialize["follower_ids"] = o.FollowerIds
	}
	if !IsNil(o.GroupIds) {
		toSerialize["group_ids"] = o.GroupIds
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["name"] = o.Name
	toSerialize["start_date"] = o.StartDate
	toSerialize["end_date"] = o.EndDate
	return toSerialize, nil
}

type NullableCreateIteration struct {
	value *CreateIteration
	isSet bool
}

func (v NullableCreateIteration) Get() *CreateIteration {
	return v.value
}

func (v *NullableCreateIteration) Set(val *CreateIteration) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIteration) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIteration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIteration(val *CreateIteration) *NullableCreateIteration {
	return &NullableCreateIteration{value: val, isSet: true}
}

func (v NullableCreateIteration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIteration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


