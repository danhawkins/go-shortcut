/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMember{}

// GetMember struct for GetMember
type GetMember struct {
	// The unique ID of the Organization to limit the lookup to.
	OrgPublicId *string `json:"org-public-id,omitempty"`
}

// NewGetMember instantiates a new GetMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMember() *GetMember {
	this := GetMember{}
	return &this
}

// NewGetMemberWithDefaults instantiates a new GetMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMemberWithDefaults() *GetMember {
	this := GetMember{}
	return &this
}

// GetOrgPublicId returns the OrgPublicId field value if set, zero value otherwise.
func (o *GetMember) GetOrgPublicId() string {
	if o == nil || IsNil(o.OrgPublicId) {
		var ret string
		return ret
	}
	return *o.OrgPublicId
}

// GetOrgPublicIdOk returns a tuple with the OrgPublicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMember) GetOrgPublicIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgPublicId) {
		return nil, false
	}
	return o.OrgPublicId, true
}

// HasOrgPublicId returns a boolean if a field has been set.
func (o *GetMember) HasOrgPublicId() bool {
	if o != nil && !IsNil(o.OrgPublicId) {
		return true
	}

	return false
}

// SetOrgPublicId gets a reference to the given string and assigns it to the OrgPublicId field.
func (o *GetMember) SetOrgPublicId(v string) {
	o.OrgPublicId = &v
}

func (o GetMember) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgPublicId) {
		toSerialize["org-public-id"] = o.OrgPublicId
	}
	return toSerialize, nil
}

type NullableGetMember struct {
	value *GetMember
	isSet bool
}

func (v NullableGetMember) Get() *GetMember {
	return v.value
}

func (v *NullableGetMember) Set(val *GetMember) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMember) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMember(val *GetMember) *NullableGetMember {
	return &NullableGetMember{value: val, isSet: true}
}

func (v NullableGetMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


