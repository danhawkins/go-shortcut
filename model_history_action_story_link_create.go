/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HistoryActionStoryLinkCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HistoryActionStoryLinkCreate{}

// HistoryActionStoryLinkCreate An action representing a Story Link being created.
type HistoryActionStoryLinkCreate struct {
	// The ID of the entity referenced.
	Id int64 `json:"id"`
	// The type of entity referenced.
	EntityType string `json:"entity_type"`
	// The action of the entity referenced.
	Action string `json:"action"`
	// The verb describing the link's relationship.
	Verb string `json:"verb"`
	// The Story ID of the subject Story.
	SubjectId int64 `json:"subject_id"`
	// The Story ID of the object Story.
	ObjectId int64 `json:"object_id"`
}

// NewHistoryActionStoryLinkCreate instantiates a new HistoryActionStoryLinkCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHistoryActionStoryLinkCreate(id int64, entityType string, action string, verb string, subjectId int64, objectId int64) *HistoryActionStoryLinkCreate {
	this := HistoryActionStoryLinkCreate{}
	this.Id = id
	this.EntityType = entityType
	this.Action = action
	this.Verb = verb
	this.SubjectId = subjectId
	this.ObjectId = objectId
	return &this
}

// NewHistoryActionStoryLinkCreateWithDefaults instantiates a new HistoryActionStoryLinkCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHistoryActionStoryLinkCreateWithDefaults() *HistoryActionStoryLinkCreate {
	this := HistoryActionStoryLinkCreate{}
	return &this
}

// GetId returns the Id field value
func (o *HistoryActionStoryLinkCreate) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *HistoryActionStoryLinkCreate) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *HistoryActionStoryLinkCreate) SetId(v int64) {
	o.Id = v
}

// GetEntityType returns the EntityType field value
func (o *HistoryActionStoryLinkCreate) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *HistoryActionStoryLinkCreate) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *HistoryActionStoryLinkCreate) SetEntityType(v string) {
	o.EntityType = v
}

// GetAction returns the Action field value
func (o *HistoryActionStoryLinkCreate) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *HistoryActionStoryLinkCreate) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *HistoryActionStoryLinkCreate) SetAction(v string) {
	o.Action = v
}

// GetVerb returns the Verb field value
func (o *HistoryActionStoryLinkCreate) GetVerb() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Verb
}

// GetVerbOk returns a tuple with the Verb field value
// and a boolean to check if the value has been set.
func (o *HistoryActionStoryLinkCreate) GetVerbOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verb, true
}

// SetVerb sets field value
func (o *HistoryActionStoryLinkCreate) SetVerb(v string) {
	o.Verb = v
}

// GetSubjectId returns the SubjectId field value
func (o *HistoryActionStoryLinkCreate) GetSubjectId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SubjectId
}

// GetSubjectIdOk returns a tuple with the SubjectId field value
// and a boolean to check if the value has been set.
func (o *HistoryActionStoryLinkCreate) GetSubjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubjectId, true
}

// SetSubjectId sets field value
func (o *HistoryActionStoryLinkCreate) SetSubjectId(v int64) {
	o.SubjectId = v
}

// GetObjectId returns the ObjectId field value
func (o *HistoryActionStoryLinkCreate) GetObjectId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value
// and a boolean to check if the value has been set.
func (o *HistoryActionStoryLinkCreate) GetObjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectId, true
}

// SetObjectId sets field value
func (o *HistoryActionStoryLinkCreate) SetObjectId(v int64) {
	o.ObjectId = v
}

func (o HistoryActionStoryLinkCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HistoryActionStoryLinkCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["entity_type"] = o.EntityType
	toSerialize["action"] = o.Action
	toSerialize["verb"] = o.Verb
	toSerialize["subject_id"] = o.SubjectId
	toSerialize["object_id"] = o.ObjectId
	return toSerialize, nil
}

type NullableHistoryActionStoryLinkCreate struct {
	value *HistoryActionStoryLinkCreate
	isSet bool
}

func (v NullableHistoryActionStoryLinkCreate) Get() *HistoryActionStoryLinkCreate {
	return v.value
}

func (v *NullableHistoryActionStoryLinkCreate) Set(val *HistoryActionStoryLinkCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableHistoryActionStoryLinkCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableHistoryActionStoryLinkCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHistoryActionStoryLinkCreate(val *HistoryActionStoryLinkCreate) *NullableHistoryActionStoryLinkCreate {
	return &NullableHistoryActionStoryLinkCreate{value: val, isSet: true}
}

func (v NullableHistoryActionStoryLinkCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHistoryActionStoryLinkCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


