/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateMilestone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateMilestone{}

// CreateMilestone struct for CreateMilestone
type CreateMilestone struct {
	// The name of the Milestone.
	Name string `json:"name"`
	// The Milestone's description.
	Description *string `json:"description,omitempty"`
	// The workflow state that the Milestone is in.
	State *string `json:"state,omitempty"`
	// A manual override for the time/date the Milestone was started.
	StartedAtOverride *time.Time `json:"started_at_override,omitempty"`
	// A manual override for the time/date the Milestone was completed.
	CompletedAtOverride *time.Time `json:"completed_at_override,omitempty"`
	// An array of IDs of Categories attached to the Milestone.
	Categories []CreateCategoryParams `json:"categories,omitempty"`
}

// NewCreateMilestone instantiates a new CreateMilestone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMilestone(name string) *CreateMilestone {
	this := CreateMilestone{}
	this.Name = name
	return &this
}

// NewCreateMilestoneWithDefaults instantiates a new CreateMilestone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMilestoneWithDefaults() *CreateMilestone {
	this := CreateMilestone{}
	return &this
}

// GetName returns the Name field value
func (o *CreateMilestone) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateMilestone) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateMilestone) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateMilestone) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMilestone) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateMilestone) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateMilestone) SetDescription(v string) {
	o.Description = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CreateMilestone) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMilestone) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CreateMilestone) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CreateMilestone) SetState(v string) {
	o.State = &v
}

// GetStartedAtOverride returns the StartedAtOverride field value if set, zero value otherwise.
func (o *CreateMilestone) GetStartedAtOverride() time.Time {
	if o == nil || IsNil(o.StartedAtOverride) {
		var ret time.Time
		return ret
	}
	return *o.StartedAtOverride
}

// GetStartedAtOverrideOk returns a tuple with the StartedAtOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMilestone) GetStartedAtOverrideOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAtOverride) {
		return nil, false
	}
	return o.StartedAtOverride, true
}

// HasStartedAtOverride returns a boolean if a field has been set.
func (o *CreateMilestone) HasStartedAtOverride() bool {
	if o != nil && !IsNil(o.StartedAtOverride) {
		return true
	}

	return false
}

// SetStartedAtOverride gets a reference to the given time.Time and assigns it to the StartedAtOverride field.
func (o *CreateMilestone) SetStartedAtOverride(v time.Time) {
	o.StartedAtOverride = &v
}

// GetCompletedAtOverride returns the CompletedAtOverride field value if set, zero value otherwise.
func (o *CreateMilestone) GetCompletedAtOverride() time.Time {
	if o == nil || IsNil(o.CompletedAtOverride) {
		var ret time.Time
		return ret
	}
	return *o.CompletedAtOverride
}

// GetCompletedAtOverrideOk returns a tuple with the CompletedAtOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMilestone) GetCompletedAtOverrideOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CompletedAtOverride) {
		return nil, false
	}
	return o.CompletedAtOverride, true
}

// HasCompletedAtOverride returns a boolean if a field has been set.
func (o *CreateMilestone) HasCompletedAtOverride() bool {
	if o != nil && !IsNil(o.CompletedAtOverride) {
		return true
	}

	return false
}

// SetCompletedAtOverride gets a reference to the given time.Time and assigns it to the CompletedAtOverride field.
func (o *CreateMilestone) SetCompletedAtOverride(v time.Time) {
	o.CompletedAtOverride = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *CreateMilestone) GetCategories() []CreateCategoryParams {
	if o == nil || IsNil(o.Categories) {
		var ret []CreateCategoryParams
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMilestone) GetCategoriesOk() ([]CreateCategoryParams, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *CreateMilestone) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []CreateCategoryParams and assigns it to the Categories field.
func (o *CreateMilestone) SetCategories(v []CreateCategoryParams) {
	o.Categories = v
}

func (o CreateMilestone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMilestone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StartedAtOverride) {
		toSerialize["started_at_override"] = o.StartedAtOverride
	}
	if !IsNil(o.CompletedAtOverride) {
		toSerialize["completed_at_override"] = o.CompletedAtOverride
	}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	return toSerialize, nil
}

type NullableCreateMilestone struct {
	value *CreateMilestone
	isSet bool
}

func (v NullableCreateMilestone) Get() *CreateMilestone {
	return v.value
}

func (v *NullableCreateMilestone) Set(val *CreateMilestone) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMilestone) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMilestone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMilestone(val *CreateMilestone) *NullableCreateMilestone {
	return &NullableCreateMilestone{value: val, isSet: true}
}

func (v NullableCreateMilestone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMilestone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


