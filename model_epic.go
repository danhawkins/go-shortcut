/*
Shortcut API

Shortcut API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Epic type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Epic{}

// Epic An Epic is a collection of stories that together might make up a release, a milestone, or some other large initiative that you are working on.
type Epic struct {
	// The Shortcut application url for the Epic.
	AppUrl string `json:"app_url"`
	// The Epic's description.
	Description string `json:"description"`
	// True/false boolean that indicates whether the Epic is archived or not.
	Archived bool `json:"archived"`
	// A true/false boolean indicating if the Epic has been started.
	Started bool `json:"started"`
	// A string description of this resource.
	EntityType string `json:"entity_type"`
	// An array of Labels attached to the Epic.
	Labels []LabelSlim `json:"labels"`
	// Deprecated: use member_mention_ids.
	MentionIds []string `json:"mention_ids"`
	// An array of Member IDs that have been mentioned in the Epic description.
	MemberMentionIds []string `json:"member_mention_ids"`
	// An array containing Group IDs and Group-owned story counts for the Epic's associated groups.
	AssociatedGroups []EpicAssociatedGroup `json:"associated_groups"`
	// The IDs of Projects related to this Epic.
	ProjectIds []int64 `json:"project_ids"`
	// The number of stories in this epic which are not associated with a project.
	StoriesWithoutProjects int64 `json:"stories_without_projects"`
	// A manual override for the time/date the Epic was completed.
	CompletedAtOverride NullableTime `json:"completed_at_override"`
	// The ID of the associated productboard integration.
	ProductboardPluginId NullableString `json:"productboard_plugin_id"`
	// The time/date the Epic was started.
	StartedAt NullableTime `json:"started_at"`
	// The time/date the Epic was completed.
	CompletedAt NullableTime `json:"completed_at"`
	// The name of the Epic.
	Name string `json:"name"`
	GlobalId string `json:"global_id"`
	// A true/false boolean indicating if the Epic has been completed.
	Completed bool `json:"completed"`
	// A nested array of threaded comments.
	Comments []ThreadedComment `json:"comments"`
	// The URL of the associated productboard feature.
	ProductboardUrl NullableString `json:"productboard_url"`
	// The Epic's planned start date.
	PlannedStartDate NullableTime `json:"planned_start_date"`
	// `Deprecated` The workflow state that the Epic is in.
	State string `json:"state"`
	// The ID of the Milestone this Epic is related to.
	MilestoneId NullableInt64 `json:"milestone_id"`
	// The ID of the Member that requested the epic.
	RequestedById string `json:"requested_by_id"`
	// The ID of the Epic State.
	EpicStateId int64 `json:"epic_state_id"`
	// An array of Label ids attached to the Epic.
	LabelIds []int64 `json:"label_ids"`
	// A manual override for the time/date the Epic was started.
	StartedAtOverride NullableTime `json:"started_at_override"`
	GroupId NullableString `json:"group_id"`
	// The time/date the Epic was updated.
	UpdatedAt NullableTime `json:"updated_at"`
	// An array of Group IDs that have been mentioned in the Epic description.
	GroupMentionIds []string `json:"group_mention_ids"`
	// The ID of the associated productboard feature.
	ProductboardId NullableString `json:"productboard_id"`
	// An array of UUIDs for any Members you want to add as Followers on this Epic.
	FollowerIds []string `json:"follower_ids"`
	// An array of UUIDs for any members you want to add as Owners on this new Epic.
	OwnerIds []string `json:"owner_ids"`
	// This field can be set to another unique ID. In the case that the Epic has been imported from another tool, the ID in the other tool can be indicated here.
	ExternalId NullableString `json:"external_id"`
	// The unique ID of the Epic.
	Id int64 `json:"id"`
	// The Epic's relative position in the Epic workflow state.
	Position int64 `json:"position"`
	// The name of the associated productboard feature.
	ProductboardName NullableString `json:"productboard_name"`
	// The Epic's deadline.
	Deadline NullableTime `json:"deadline"`
	Stats EpicStats `json:"stats"`
	// The time/date the Epic was created.
	CreatedAt NullableTime `json:"created_at"`
}

// NewEpic instantiates a new Epic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEpic(appUrl string, description string, archived bool, started bool, entityType string, labels []LabelSlim, mentionIds []string, memberMentionIds []string, associatedGroups []EpicAssociatedGroup, projectIds []int64, storiesWithoutProjects int64, completedAtOverride NullableTime, productboardPluginId NullableString, startedAt NullableTime, completedAt NullableTime, name string, globalId string, completed bool, comments []ThreadedComment, productboardUrl NullableString, plannedStartDate NullableTime, state string, milestoneId NullableInt64, requestedById string, epicStateId int64, labelIds []int64, startedAtOverride NullableTime, groupId NullableString, updatedAt NullableTime, groupMentionIds []string, productboardId NullableString, followerIds []string, ownerIds []string, externalId NullableString, id int64, position int64, productboardName NullableString, deadline NullableTime, stats EpicStats, createdAt NullableTime) *Epic {
	this := Epic{}
	this.AppUrl = appUrl
	this.Description = description
	this.Archived = archived
	this.Started = started
	this.EntityType = entityType
	this.Labels = labels
	this.MentionIds = mentionIds
	this.MemberMentionIds = memberMentionIds
	this.AssociatedGroups = associatedGroups
	this.ProjectIds = projectIds
	this.StoriesWithoutProjects = storiesWithoutProjects
	this.CompletedAtOverride = completedAtOverride
	this.ProductboardPluginId = productboardPluginId
	this.StartedAt = startedAt
	this.CompletedAt = completedAt
	this.Name = name
	this.GlobalId = globalId
	this.Completed = completed
	this.Comments = comments
	this.ProductboardUrl = productboardUrl
	this.PlannedStartDate = plannedStartDate
	this.State = state
	this.MilestoneId = milestoneId
	this.RequestedById = requestedById
	this.EpicStateId = epicStateId
	this.LabelIds = labelIds
	this.StartedAtOverride = startedAtOverride
	this.GroupId = groupId
	this.UpdatedAt = updatedAt
	this.GroupMentionIds = groupMentionIds
	this.ProductboardId = productboardId
	this.FollowerIds = followerIds
	this.OwnerIds = ownerIds
	this.ExternalId = externalId
	this.Id = id
	this.Position = position
	this.ProductboardName = productboardName
	this.Deadline = deadline
	this.Stats = stats
	this.CreatedAt = createdAt
	return &this
}

// NewEpicWithDefaults instantiates a new Epic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEpicWithDefaults() *Epic {
	this := Epic{}
	return &this
}

// GetAppUrl returns the AppUrl field value
func (o *Epic) GetAppUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppUrl
}

// GetAppUrlOk returns a tuple with the AppUrl field value
// and a boolean to check if the value has been set.
func (o *Epic) GetAppUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppUrl, true
}

// SetAppUrl sets field value
func (o *Epic) SetAppUrl(v string) {
	o.AppUrl = v
}

// GetDescription returns the Description field value
func (o *Epic) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Epic) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Epic) SetDescription(v string) {
	o.Description = v
}

// GetArchived returns the Archived field value
func (o *Epic) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *Epic) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *Epic) SetArchived(v bool) {
	o.Archived = v
}

// GetStarted returns the Started field value
func (o *Epic) GetStarted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Started
}

// GetStartedOk returns a tuple with the Started field value
// and a boolean to check if the value has been set.
func (o *Epic) GetStartedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Started, true
}

// SetStarted sets field value
func (o *Epic) SetStarted(v bool) {
	o.Started = v
}

// GetEntityType returns the EntityType field value
func (o *Epic) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *Epic) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *Epic) SetEntityType(v string) {
	o.EntityType = v
}

// GetLabels returns the Labels field value
func (o *Epic) GetLabels() []LabelSlim {
	if o == nil {
		var ret []LabelSlim
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *Epic) GetLabelsOk() ([]LabelSlim, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *Epic) SetLabels(v []LabelSlim) {
	o.Labels = v
}

// GetMentionIds returns the MentionIds field value
func (o *Epic) GetMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MentionIds
}

// GetMentionIdsOk returns a tuple with the MentionIds field value
// and a boolean to check if the value has been set.
func (o *Epic) GetMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MentionIds, true
}

// SetMentionIds sets field value
func (o *Epic) SetMentionIds(v []string) {
	o.MentionIds = v
}

// GetMemberMentionIds returns the MemberMentionIds field value
func (o *Epic) GetMemberMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MemberMentionIds
}

// GetMemberMentionIdsOk returns a tuple with the MemberMentionIds field value
// and a boolean to check if the value has been set.
func (o *Epic) GetMemberMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberMentionIds, true
}

// SetMemberMentionIds sets field value
func (o *Epic) SetMemberMentionIds(v []string) {
	o.MemberMentionIds = v
}

// GetAssociatedGroups returns the AssociatedGroups field value
func (o *Epic) GetAssociatedGroups() []EpicAssociatedGroup {
	if o == nil {
		var ret []EpicAssociatedGroup
		return ret
	}

	return o.AssociatedGroups
}

// GetAssociatedGroupsOk returns a tuple with the AssociatedGroups field value
// and a boolean to check if the value has been set.
func (o *Epic) GetAssociatedGroupsOk() ([]EpicAssociatedGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssociatedGroups, true
}

// SetAssociatedGroups sets field value
func (o *Epic) SetAssociatedGroups(v []EpicAssociatedGroup) {
	o.AssociatedGroups = v
}

// GetProjectIds returns the ProjectIds field value
func (o *Epic) GetProjectIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.ProjectIds
}

// GetProjectIdsOk returns a tuple with the ProjectIds field value
// and a boolean to check if the value has been set.
func (o *Epic) GetProjectIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectIds, true
}

// SetProjectIds sets field value
func (o *Epic) SetProjectIds(v []int64) {
	o.ProjectIds = v
}

// GetStoriesWithoutProjects returns the StoriesWithoutProjects field value
func (o *Epic) GetStoriesWithoutProjects() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StoriesWithoutProjects
}

// GetStoriesWithoutProjectsOk returns a tuple with the StoriesWithoutProjects field value
// and a boolean to check if the value has been set.
func (o *Epic) GetStoriesWithoutProjectsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoriesWithoutProjects, true
}

// SetStoriesWithoutProjects sets field value
func (o *Epic) SetStoriesWithoutProjects(v int64) {
	o.StoriesWithoutProjects = v
}

// GetCompletedAtOverride returns the CompletedAtOverride field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Epic) GetCompletedAtOverride() time.Time {
	if o == nil || o.CompletedAtOverride.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CompletedAtOverride.Get()
}

// GetCompletedAtOverrideOk returns a tuple with the CompletedAtOverride field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetCompletedAtOverrideOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAtOverride.Get(), o.CompletedAtOverride.IsSet()
}

// SetCompletedAtOverride sets field value
func (o *Epic) SetCompletedAtOverride(v time.Time) {
	o.CompletedAtOverride.Set(&v)
}

// GetProductboardPluginId returns the ProductboardPluginId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Epic) GetProductboardPluginId() string {
	if o == nil || o.ProductboardPluginId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProductboardPluginId.Get()
}

// GetProductboardPluginIdOk returns a tuple with the ProductboardPluginId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetProductboardPluginIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductboardPluginId.Get(), o.ProductboardPluginId.IsSet()
}

// SetProductboardPluginId sets field value
func (o *Epic) SetProductboardPluginId(v string) {
	o.ProductboardPluginId.Set(&v)
}

// GetStartedAt returns the StartedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Epic) GetStartedAt() time.Time {
	if o == nil || o.StartedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.StartedAt.Get()
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAt.Get(), o.StartedAt.IsSet()
}

// SetStartedAt sets field value
func (o *Epic) SetStartedAt(v time.Time) {
	o.StartedAt.Set(&v)
}

// GetCompletedAt returns the CompletedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Epic) GetCompletedAt() time.Time {
	if o == nil || o.CompletedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CompletedAt.Get()
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAt.Get(), o.CompletedAt.IsSet()
}

// SetCompletedAt sets field value
func (o *Epic) SetCompletedAt(v time.Time) {
	o.CompletedAt.Set(&v)
}

// GetName returns the Name field value
func (o *Epic) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Epic) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Epic) SetName(v string) {
	o.Name = v
}

// GetGlobalId returns the GlobalId field value
func (o *Epic) GetGlobalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GlobalId
}

// GetGlobalIdOk returns a tuple with the GlobalId field value
// and a boolean to check if the value has been set.
func (o *Epic) GetGlobalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalId, true
}

// SetGlobalId sets field value
func (o *Epic) SetGlobalId(v string) {
	o.GlobalId = v
}

// GetCompleted returns the Completed field value
func (o *Epic) GetCompleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value
// and a boolean to check if the value has been set.
func (o *Epic) GetCompletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Completed, true
}

// SetCompleted sets field value
func (o *Epic) SetCompleted(v bool) {
	o.Completed = v
}

// GetComments returns the Comments field value
func (o *Epic) GetComments() []ThreadedComment {
	if o == nil {
		var ret []ThreadedComment
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *Epic) GetCommentsOk() ([]ThreadedComment, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comments, true
}

// SetComments sets field value
func (o *Epic) SetComments(v []ThreadedComment) {
	o.Comments = v
}

// GetProductboardUrl returns the ProductboardUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Epic) GetProductboardUrl() string {
	if o == nil || o.ProductboardUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProductboardUrl.Get()
}

// GetProductboardUrlOk returns a tuple with the ProductboardUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetProductboardUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductboardUrl.Get(), o.ProductboardUrl.IsSet()
}

// SetProductboardUrl sets field value
func (o *Epic) SetProductboardUrl(v string) {
	o.ProductboardUrl.Set(&v)
}

// GetPlannedStartDate returns the PlannedStartDate field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Epic) GetPlannedStartDate() time.Time {
	if o == nil || o.PlannedStartDate.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.PlannedStartDate.Get()
}

// GetPlannedStartDateOk returns a tuple with the PlannedStartDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetPlannedStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlannedStartDate.Get(), o.PlannedStartDate.IsSet()
}

// SetPlannedStartDate sets field value
func (o *Epic) SetPlannedStartDate(v time.Time) {
	o.PlannedStartDate.Set(&v)
}

// GetState returns the State field value
func (o *Epic) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Epic) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Epic) SetState(v string) {
	o.State = v
}

// GetMilestoneId returns the MilestoneId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *Epic) GetMilestoneId() int64 {
	if o == nil || o.MilestoneId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.MilestoneId.Get()
}

// GetMilestoneIdOk returns a tuple with the MilestoneId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetMilestoneIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MilestoneId.Get(), o.MilestoneId.IsSet()
}

// SetMilestoneId sets field value
func (o *Epic) SetMilestoneId(v int64) {
	o.MilestoneId.Set(&v)
}

// GetRequestedById returns the RequestedById field value
func (o *Epic) GetRequestedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestedById
}

// GetRequestedByIdOk returns a tuple with the RequestedById field value
// and a boolean to check if the value has been set.
func (o *Epic) GetRequestedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestedById, true
}

// SetRequestedById sets field value
func (o *Epic) SetRequestedById(v string) {
	o.RequestedById = v
}

// GetEpicStateId returns the EpicStateId field value
func (o *Epic) GetEpicStateId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EpicStateId
}

// GetEpicStateIdOk returns a tuple with the EpicStateId field value
// and a boolean to check if the value has been set.
func (o *Epic) GetEpicStateIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EpicStateId, true
}

// SetEpicStateId sets field value
func (o *Epic) SetEpicStateId(v int64) {
	o.EpicStateId = v
}

// GetLabelIds returns the LabelIds field value
func (o *Epic) GetLabelIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value
// and a boolean to check if the value has been set.
func (o *Epic) GetLabelIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LabelIds, true
}

// SetLabelIds sets field value
func (o *Epic) SetLabelIds(v []int64) {
	o.LabelIds = v
}

// GetStartedAtOverride returns the StartedAtOverride field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Epic) GetStartedAtOverride() time.Time {
	if o == nil || o.StartedAtOverride.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.StartedAtOverride.Get()
}

// GetStartedAtOverrideOk returns a tuple with the StartedAtOverride field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetStartedAtOverrideOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAtOverride.Get(), o.StartedAtOverride.IsSet()
}

// SetStartedAtOverride sets field value
func (o *Epic) SetStartedAtOverride(v time.Time) {
	o.StartedAtOverride.Set(&v)
}

// GetGroupId returns the GroupId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Epic) GetGroupId() string {
	if o == nil || o.GroupId.Get() == nil {
		var ret string
		return ret
	}

	return *o.GroupId.Get()
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupId.Get(), o.GroupId.IsSet()
}

// SetGroupId sets field value
func (o *Epic) SetGroupId(v string) {
	o.GroupId.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Epic) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *Epic) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// GetGroupMentionIds returns the GroupMentionIds field value
func (o *Epic) GetGroupMentionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.GroupMentionIds
}

// GetGroupMentionIdsOk returns a tuple with the GroupMentionIds field value
// and a boolean to check if the value has been set.
func (o *Epic) GetGroupMentionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupMentionIds, true
}

// SetGroupMentionIds sets field value
func (o *Epic) SetGroupMentionIds(v []string) {
	o.GroupMentionIds = v
}

// GetProductboardId returns the ProductboardId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Epic) GetProductboardId() string {
	if o == nil || o.ProductboardId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProductboardId.Get()
}

// GetProductboardIdOk returns a tuple with the ProductboardId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetProductboardIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductboardId.Get(), o.ProductboardId.IsSet()
}

// SetProductboardId sets field value
func (o *Epic) SetProductboardId(v string) {
	o.ProductboardId.Set(&v)
}

// GetFollowerIds returns the FollowerIds field value
func (o *Epic) GetFollowerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.FollowerIds
}

// GetFollowerIdsOk returns a tuple with the FollowerIds field value
// and a boolean to check if the value has been set.
func (o *Epic) GetFollowerIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FollowerIds, true
}

// SetFollowerIds sets field value
func (o *Epic) SetFollowerIds(v []string) {
	o.FollowerIds = v
}

// GetOwnerIds returns the OwnerIds field value
func (o *Epic) GetOwnerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OwnerIds
}

// GetOwnerIdsOk returns a tuple with the OwnerIds field value
// and a boolean to check if the value has been set.
func (o *Epic) GetOwnerIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OwnerIds, true
}

// SetOwnerIds sets field value
func (o *Epic) SetOwnerIds(v []string) {
	o.OwnerIds = v
}

// GetExternalId returns the ExternalId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Epic) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// SetExternalId sets field value
func (o *Epic) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}

// GetId returns the Id field value
func (o *Epic) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Epic) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Epic) SetId(v int64) {
	o.Id = v
}

// GetPosition returns the Position field value
func (o *Epic) GetPosition() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *Epic) GetPositionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *Epic) SetPosition(v int64) {
	o.Position = v
}

// GetProductboardName returns the ProductboardName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Epic) GetProductboardName() string {
	if o == nil || o.ProductboardName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProductboardName.Get()
}

// GetProductboardNameOk returns a tuple with the ProductboardName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetProductboardNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductboardName.Get(), o.ProductboardName.IsSet()
}

// SetProductboardName sets field value
func (o *Epic) SetProductboardName(v string) {
	o.ProductboardName.Set(&v)
}

// GetDeadline returns the Deadline field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Epic) GetDeadline() time.Time {
	if o == nil || o.Deadline.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.Deadline.Get()
}

// GetDeadlineOk returns a tuple with the Deadline field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetDeadlineOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Deadline.Get(), o.Deadline.IsSet()
}

// SetDeadline sets field value
func (o *Epic) SetDeadline(v time.Time) {
	o.Deadline.Set(&v)
}

// GetStats returns the Stats field value
func (o *Epic) GetStats() EpicStats {
	if o == nil {
		var ret EpicStats
		return ret
	}

	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value
// and a boolean to check if the value has been set.
func (o *Epic) GetStatsOk() (*EpicStats, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stats, true
}

// SetStats sets field value
func (o *Epic) SetStats(v EpicStats) {
	o.Stats = v
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Epic) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Epic) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *Epic) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

func (o Epic) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Epic) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app_url"] = o.AppUrl
	toSerialize["description"] = o.Description
	toSerialize["archived"] = o.Archived
	toSerialize["started"] = o.Started
	toSerialize["entity_type"] = o.EntityType
	toSerialize["labels"] = o.Labels
	toSerialize["mention_ids"] = o.MentionIds
	toSerialize["member_mention_ids"] = o.MemberMentionIds
	toSerialize["associated_groups"] = o.AssociatedGroups
	toSerialize["project_ids"] = o.ProjectIds
	toSerialize["stories_without_projects"] = o.StoriesWithoutProjects
	toSerialize["completed_at_override"] = o.CompletedAtOverride.Get()
	toSerialize["productboard_plugin_id"] = o.ProductboardPluginId.Get()
	toSerialize["started_at"] = o.StartedAt.Get()
	toSerialize["completed_at"] = o.CompletedAt.Get()
	toSerialize["name"] = o.Name
	toSerialize["global_id"] = o.GlobalId
	toSerialize["completed"] = o.Completed
	toSerialize["comments"] = o.Comments
	toSerialize["productboard_url"] = o.ProductboardUrl.Get()
	toSerialize["planned_start_date"] = o.PlannedStartDate.Get()
	toSerialize["state"] = o.State
	toSerialize["milestone_id"] = o.MilestoneId.Get()
	toSerialize["requested_by_id"] = o.RequestedById
	toSerialize["epic_state_id"] = o.EpicStateId
	toSerialize["label_ids"] = o.LabelIds
	toSerialize["started_at_override"] = o.StartedAtOverride.Get()
	toSerialize["group_id"] = o.GroupId.Get()
	toSerialize["updated_at"] = o.UpdatedAt.Get()
	toSerialize["group_mention_ids"] = o.GroupMentionIds
	toSerialize["productboard_id"] = o.ProductboardId.Get()
	toSerialize["follower_ids"] = o.FollowerIds
	toSerialize["owner_ids"] = o.OwnerIds
	toSerialize["external_id"] = o.ExternalId.Get()
	toSerialize["id"] = o.Id
	toSerialize["position"] = o.Position
	toSerialize["productboard_name"] = o.ProductboardName.Get()
	toSerialize["deadline"] = o.Deadline.Get()
	toSerialize["stats"] = o.Stats
	toSerialize["created_at"] = o.CreatedAt.Get()
	return toSerialize, nil
}

type NullableEpic struct {
	value *Epic
	isSet bool
}

func (v NullableEpic) Get() *Epic {
	return v.value
}

func (v *NullableEpic) Set(val *Epic) {
	v.value = val
	v.isSet = true
}

func (v NullableEpic) IsSet() bool {
	return v.isSet
}

func (v *NullableEpic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEpic(val *Epic) *NullableEpic {
	return &NullableEpic{value: val, isSet: true}
}

func (v NullableEpic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEpic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


